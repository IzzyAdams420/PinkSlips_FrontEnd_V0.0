{
  "contractName": "DisputeMachine",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_AddressManagerAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "AddressManagerAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "ChadBadgeAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "GAVELS_BAILIFF",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "GavelDAOAgent",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "GavelTokenAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "GavelVote",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "GoldStarAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "JERK_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "JURY_BAILIFF",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "JuryDAOAgent",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "JuryPoolAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "JuryVote",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "MINI_BAILIFF_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "MiniBailiff",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "PinkSlipAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "RedPenTokenAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "THE_COURT_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "TheCourtAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "TreasuryAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "addressManager",
      "outputs": [
        {
          "internalType": "contract AddressManager",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getRoleMember",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleMemberCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "jerkSanctions",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "juryHats",
      "outputs": [
        {
          "internalType": "contract JuryPool",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "redPens",
      "outputs": [
        {
          "internalType": "contract ERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "resetVote",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "slashPercentageInWholeNumber",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "syncAllRoles",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "ROLE_TO_SYNC",
          "type": "bytes32"
        }
      ],
      "name": "syncSingleRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "syncVotes",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "updateAddressManager",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "updateAllAddresses",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "updateAllRoles",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "updateDAOAddresses",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "ROLE_TO_UPDATE",
          "type": "bytes32"
        }
      ],
      "name": "updateSingleRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "updateTokenAddresses",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_slashPercentageInWholeNumber",
          "type": "uint256"
        }
      ],
      "name": "setSlashPercent",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_AddressManagerAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"AddressManagerAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ChadBadgeAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"GAVELS_BAILIFF\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"GavelDAOAgent\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"GavelTokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"GavelVote\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"GoldStarAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"JERK_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"JURY_BAILIFF\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"JuryDAOAgent\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"JuryPoolAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"JuryVote\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINI_BAILIFF_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MiniBailiff\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PinkSlipAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"RedPenTokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"THE_COURT_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TheCourtAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TreasuryAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"addressManager\",\"outputs\":[{\"internalType\":\"contract AddressManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"jerkSanctions\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"juryHats\",\"outputs\":[{\"internalType\":\"contract JuryPool\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"redPens\",\"outputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"resetVote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_slashPercentageInWholeNumber\",\"type\":\"uint256\"}],\"name\":\"setSlashPercent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slashPercentageInWholeNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"syncAllRoles\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"ROLE_TO_SYNC\",\"type\":\"bytes32\"}],\"name\":\"syncSingleRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"syncVotes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"updateAddressManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"updateAllAddresses\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"updateAllRoles\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"updateDAOAddresses\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"ROLE_TO_UPDATE\",\"type\":\"bytes32\"}],\"name\":\"updateSingleRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"updateTokenAddresses\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Overload {grantRole} to track enumerable memberships\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Overload {renounceRole} to track enumerable memberships\"},\"revokeRole(bytes32,address)\":{\"details\":\"Overload {revokeRole} to track enumerable memberships\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/n/Desktop/v3_fronternd/PinkSlips_FrontEnd_ROUGH/contracts/juryAndAppeals/DisputeMachine.sol\":\"DisputeMachine\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/n/Desktop/v3_fronternd/PinkSlips_FrontEnd_ROUGH/contracts/juryAndAppeals/DisputeMachine.sol\":{\"keccak256\":\"0x0a68fd2cccc5ddb70d7924e65cd06d27ebab5cb8b8404fb5d6a7f53bdd7923c8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a5a072d29742606ce0132e6e4b84ab4ae4b425cf7c547eb725a1bd86da35d9e1\",\"dweb:/ipfs/QmSpxz3EirRYVN7cuk8nGngwwH9a5b4BkzT3GBxi15ajjY\"]},\"/home/n/Desktop/v3_fronternd/PinkSlips_FrontEnd_ROUGH/contracts/juryAndAppeals/JuryPool.sol\":{\"keccak256\":\"0xe97bd05c973dbb073991a348117c8265e1f6590f19514fdcd17cd93f52eebf35\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a83bfcb6fd799b9aa41ae3eda0187787faf6cd0317f5de79717af2b43232c808\",\"dweb:/ipfs/Qmd7VLajasT1djApcYGtidrXVDkqw6sL6UpAJsqQ9s6mYN\"]},\"/home/n/Desktop/v3_fronternd/PinkSlips_FrontEnd_ROUGH/contracts/src/AddressManager.sol\":{\"keccak256\":\"0x51e9bd04f864395032c01342aa2149058d333922077ac5b58eae7595f59cbb56\",\"urls\":[\"bzz-raw://296f2120d77dd2db1597404e8fbf630ec6ca617832247d3557711b7088693c10\",\"dweb:/ipfs/QmQL2x3voYG9f4SvBe5a1Ka57LER5UVi5LQ81MST3qvXAH\"]},\"/home/n/Desktop/v3_fronternd/PinkSlips_FrontEnd_ROUGH/contracts/src/AddressManagerReciever.sol\":{\"keccak256\":\"0x22645deb038bb3aaaefa2fd2578f6a344a1e598061eb1a21f664c4b02fb40461\",\"urls\":[\"bzz-raw://1e72b7206ac42f5495c7ce974fade5364b8d1865601410735d9ad3992639d808\",\"dweb:/ipfs/Qmb8R6DkVU4sw74mcCCUqdddNiaKwCmwd2bgksFyssuEbA\"]},\"/home/n/Desktop/v3_fronternd/PinkSlips_FrontEnd_ROUGH/contracts/src/ConsensusMachine.sol\":{\"keccak256\":\"0x61e5de4ba1573a9af7d6d07dd0e81c46a3d2136c2caa61d9c739d727e6110ad7\",\"urls\":[\"bzz-raw://2a277da08c8538408514e2825bf31576d14e6ba8cd12fe3f3c4400bf625c77eb\",\"dweb:/ipfs/QmfNTKs5u5ZAoAKQ9DQuoF8AbeydgYiHjHJNPPEBomcoHd\"]},\"/home/n/Desktop/v3_fronternd/PinkSlips_FrontEnd_ROUGH/contracts/src/SmartConsensusMachine.sol\":{\"keccak256\":\"0x656dccbf3f4ec8f2c365ac876fb781f8058dfcfdeb6fb6b6e21f0e245d3b08cd\",\"urls\":[\"bzz-raw://734b9d744b5c390844b6b2bf7dcd71349311d65ec0beb786257798d011c3d140\",\"dweb:/ipfs/QmSiYumork8Hk9YUx7Km7ZNy74CyTDfAGQQYQRmdygfQEM\"]},\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x98fac37221212c8f126f198d262a4df86394bd1a9969f61e40739fe8ac013dd8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://62f98a3c51ff54e1d19c8845da55415c85b4f28c81c0c3b1361eb6eaa905a0c6\",\"dweb:/ipfs/QmTZxiScs2HXZRtscWGjBBXmG4qeFGk1Bq8FGzhbWi1wr3\"]},\"@openzeppelin/contracts/access/AccessControlEnumerable.sol\":{\"keccak256\":\"0x0d616363c1a1e6f9f489303f94df0cbe606826ab4944d315c3801a07f9b8d4ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://976cf80d02556929369fc98196c4082f204e44e682e20d3f65cc61b31e29bf76\",\"dweb:/ipfs/Qmeo1vvf7L3PLLDPNSVuVyirLB3FrCYKMFw3JZ7EXgC5YU\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xfeccdcbf67b2006a715e5af1a4c7556004d95b2806552b5cc54e46e8eb7e887b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://45b1f9043c0fb450272f20ed19ef633fcba1b129d602651a856dfae1a2243a2c\",\"dweb:/ipfs/QmUTSQiDikkcNtTtyDpkEwCM5ztVUUh9c1inBukn6HC5Vr\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ec48567e7ad06acb670980d5cdf3fd7f3949bf12894f02d68c3bb43e75aa84f\",\"dweb:/ipfs/QmaG3R2J9cz92YT77vFjYrjMNU2wHp4ypwYD62HqDUqS5U\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol\":{\"keccak256\":\"0x0aa584894b926e99e9bbb20c9d240371b36089ad704d73ac012c4d855c7a9c72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://025d13d1a7690ce76e87eae363ce1f1e9f0d25589a3aef3a6b59bb3333dccf43\",\"dweb:/ipfs/Qmd7H8P6AUUWARQ22Jnt4sHQvdyhuRy8W7yjtY2iTWJnqi\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x83fe24f5c04a56091e50f4a345ff504c8bff658a76d4c43b16878c8f940c53b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4c3df1a7ca104b633a7d81c6c6f5192367d150cd5a32cba81f7f27012729013\",\"dweb:/ipfs/QmSim72e3ZVsfgZt8UceCvbiSuMRHR6WDsiamqNzZahGSY\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x2d9f9af8b84d252e0e7ee716e4cb3ad1b58f3ec6619e4f54f40d4b5e28f75eb7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43d6abdcb4cd5be9933f526b53f21008e9a7ab75ce134478625cc8ccd3c1a638\",\"dweb:/ipfs/QmZrzWUYmNANRCvHaMGsJQXYnWCe6HvMmvrqaPn1GEcpJ1\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xc1c941ad1e580b4623007305921efe2f26fc7320a4edc226234dd707c658a428\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://473e11d739868e0d9f48254ccf84ba63290d6a2321d59a37b74c244a27f9cad7\",\"dweb:/ipfs/QmUGzDmecP936jzgM7SYyGwR1YgBGsveoHHJTbDfB8jbGF\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x96877bb2eb8ca360e949ee1bd77b47a14e92e42f79897c350f088f87a3c231d4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://48593d699a4ef6b5bd2efb20d37320e69303fd27d4b59a2b6b8a8e563e608456\",\"dweb:/ipfs/QmdAPS8uLrzPJEeFZyJVkwTtaL3KB9jo9wJm1UcoJP55wT\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":{\"keccak256\":\"0x3dce5847e70c056ef0f7cf91cb9a0067cf90784794017a45c1211cde7ed1c08c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba34b5028b6a297467a7364d9af182649dee0611a0f9620ec27ce10647885cad\",\"dweb:/ipfs/QmWhGtHDcAYWA31f3Ze9izeh3SPMRzcFagTUwxExLg3sRc\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0xccb7e6475afcb1c5cb13b3fbf1329c10b93620a9b66393388066683915271a78\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df5776161e3226ac31bfb919dfe5f42e173a08293fadb4ffa90ffb55e76869d7\",\"dweb:/ipfs/QmXtKfvWj1v6oha8urbnw4RmjSpmQjZsGGqK5qk5trK4nH\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0xb8d11e77eb1ed34a33720edb551d7d6a6b0eee2bfaa40a7024020e1fdf879b16\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c583283c838cc624a96a69eaa823fa92ac5294ec88d417e266c09ea091e0ae62\",\"dweb:/ipfs/QmNdzitXaFADaxooWpB4WsckkDyr4j6GQRxBjyKXsvEeXv\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x069b2631bb5b5193a58ccf7a06266c7361bd2c20095667af4402817605627f45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a4c96fafff76deda5697c3c5c98cade6e6e1b178254544c106bf360c079ce4e\",\"dweb:/ipfs/QmXmxubE3jnatFgZuN8ay1VV6hZ8WRmhvUjNpeVjki15HX\"]},\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0x415faff3ea57601e0d5ebb1f02b0b808a302f8b661ff08d6b4a00c0ee00fa57e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0520bd87d3e82f9761054220cc1c58b92598852d99e5ec090b427f3ae9d67a2c\",\"dweb:/ipfs/QmYTbyVy45dzkWnjvb9jhgVCfycEiefbATvusxk1Wepz32\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2bfdea0d2562c76fb3c4cf70a86c6ba25c5a30e8f8515c95aafdf8383f8395\",\"dweb:/ipfs/QmTbFya18786ckJfLYUoWau9jBTKfmWnWm5XSViWvB7PXN\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0x62d306ff0499a11913bc60b5939eec619509b5c67b30e86ebf8b8bda0b7a7fee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6712ca27a06062db31465b1470e6207553553a9bb0b4358d918b35bdae5b4ffe\",\"dweb:/ipfs/QmZ92pU9DJ3h1qREMFvDQhArSy6fh6zA983NeLFHRs1qKJ\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x456e9b3a2bfe189b5249857f624f4139e59331db518483b456c4e587a20552e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1123c9545decc48a011370ebab4bf53dda98524fa21f9498e68851ba8f0ffc0f\",\"dweb:/ipfs/QmUpgMg8EFDnv87ePKUjXxXpJT3qwHRj9VDNSnRxu7T9sy\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x5718c5df9bd67ac68a796961df938821bb5dc0cd4c6118d77e9145afb187409b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d10e1d9b26042424789246603906ad06143bf9a928f4e99de8b5e3bdc662f549\",\"dweb:/ipfs/Qmejonoaj5MLekPus229rJQHcC6E9dz2xorjHJR84fMfmn\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://796ab6e88af7bf0e78def0f059310c903af6a312b565344e0ff524a0f26e81c6\",\"dweb:/ipfs/QmcsVgLgzWdor3UnAztUkXKNGcysm1MPneWksF72AvnwBx\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1477864def7febd9826918e50482a1ee7068b337b03804a7e0e98c674ac57c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5bdd8ea2ace1bf716007318f8aca21d32384f0b8b295adac55147270767441fa\",\"dweb:/ipfs/QmSv235N45Ub3wFXdTLNiS3k4b7FAudtEL8s6g1PwcsCcS\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x4878ef6c288f4cef3c2a288d32cc548c648831cc55503ad3d9a581ed3b93aad9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff1bdcc04ffc6b0a39e76ca4d8c09fb36927c2355008294db28096c1bd9ef544\",\"dweb:/ipfs/QmSNmMUxcuQ9i6U1PVcd14gTCEYmFgkjPg3anzDckGhVRS\"]}},\"version\":1}",
  "bytecode": "0x6080604052600e805463ffffffff60a01b191690556000601155601e6012553480156200002b57600080fd5b5060405162002e3d38038062002e3d8339810160408190526200004e9162000af8565b600280546001600160a01b038084166001600160a01b03199283161792839055600e805490921692169190911790558062000088620001c5565b62000092620001db565b600c54620000ac906000906001600160a01b03166200031f565b600c54620000e5907f0538d24a8b7882d7b2e36af243d4af61c23e86e3daa6cb8c887b53220b2f5720906001600160a01b03166200031f565b6009546200011e907f048bc71fa1cb2c119c339cf9cf00a97996a19a9d991ce5fe049f2fa5459e7990906001600160a01b03166200031f565b600a5462000157907ffa8e4989e1d689f7bc5c4b25b87efb51fecdecb19ba62847e29c759e12a89acd906001600160a01b03166200031f565b600d5462000190907ff0f4b159a6e2a4815eb3ca3df080bfa70c9270662c59bcaa4479a456220183e6906001600160a01b03166200031f565b620001bd7f7c9d7f6f02908185bffb3f7fc9afb29fd7bf93675af8fd4b655ee05c2cee1e0e60006200031f565b505062000b4a565b620001cf62000362565b620001d9620005cd565b565b600e60009054906101000a90046001600160a01b03166001600160a01b031663ff7e88ec6040518163ffffffff1660e01b815260040160206040518083038186803b1580156200022a57600080fd5b505afa1580156200023f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000265919062000b28565b600e8054911515600160a81b0260ff60a81b19909216919091179081905560408051632fb5658560e01b815290516001600160a01b0390921691632fb5658591600480820192602092909190829003018186803b158015620002c657600080fd5b505afa158015620002db573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000301919062000b28565b600e8054911515600160b01b0260ff60b01b19909216919091179055565b6200033682826200061660201b6200090c1760201c565b60008281526001602090815260409091206200035d9183906200091662000626821b17901c565b505050565b600e60009054906101000a90046001600160a01b03166001600160a01b031663dadf56ac6040518163ffffffff1660e01b815260040160206040518083038186803b158015620003b157600080fd5b505afa158015620003c6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620003ec919062000af8565b600980546001600160a01b0319166001600160a01b03928316179055600e546040805163024bebe960e01b81529051919092169163024bebe9916004808301926020929190829003018186803b1580156200044657600080fd5b505afa1580156200045b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000481919062000af8565b600a80546001600160a01b0319166001600160a01b03928316179055600e5460408051635b5c251f60e01b815290519190921691635b5c251f916004808301926020929190829003018186803b158015620004db57600080fd5b505afa158015620004f0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000516919062000af8565b600b80546001600160a01b0319166001600160a01b03928316179055600e5460408051637310bf1d60e11b81529051919092169163e6217e3a916004808301926020929190829003018186803b1580156200057057600080fd5b505afa15801562000585573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620005ab919062000af8565b600d80546001600160a01b0319166001600160a01b0392909216919091179055565b620005e26200064660201b6200092b1760201c565b600454600f80546001600160a01b039283166001600160a01b03199182161790915560085460108054919093169116179055565b620006228282620009da565b5050565b60006200063d836001600160a01b03841662000a64565b90505b92915050565b600e60009054906101000a90046001600160a01b03166001600160a01b03166321d7f0086040518163ffffffff1660e01b815260040160206040518083038186803b1580156200069557600080fd5b505afa158015620006aa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620006d0919062000af8565b600380546001600160a01b0319166001600160a01b03928316179055600e546040805163762ddb5960e01b81529051919092169163762ddb59916004808301926020929190829003018186803b1580156200072a57600080fd5b505afa1580156200073f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000765919062000af8565b600480546001600160a01b0319166001600160a01b03928316178155600e546040805163bfb7dc9960e01b81529051919093169263bfb7dc999281810192602092909190829003018186803b158015620007be57600080fd5b505afa158015620007d3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620007f9919062000af8565b600580546001600160a01b0319166001600160a01b03928316179055600e5460408051633e6111eb60e21b81529051919092169163f98447ac916004808301926020929190829003018186803b1580156200085357600080fd5b505afa15801562000868573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200088e919062000af8565b600680546001600160a01b0319166001600160a01b03928316179055600e5460408051630fe1ba9f60e21b815290519190921691633f86ea7c916004808301926020929190829003018186803b158015620008e857600080fd5b505afa158015620008fd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000923919062000af8565b600780546001600160a01b0319166001600160a01b03928316179055600e5460408051636b58477560e01b815290519190921691636b584775916004808301926020929190829003018186803b1580156200097d57600080fd5b505afa15801562000992573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620009b8919062000af8565b600880546001600160a01b0319166001600160a01b0392909216919091179055565b620009e6828262000ab3565b62000622576000828152602081815260408083206001600160a01b03851684529091529020805460ff1916600117905562000a2062000adc565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b600062000a72838362000ae0565b62000aaa5750815460018181018455600084815260208082209093018490558454848252828601909352604090209190915562000640565b50600062000640565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b3390565b60009081526001919091016020526040902054151590565b60006020828403121562000b0a578081fd5b81516001600160a01b038116811462000b21578182fd5b9392505050565b60006020828403121562000b3a578081fd5b8151801515811462000b21578182fd5b6122e38062000b5a6000396000f3fe608060405234801561001057600080fd5b50600436106102745760003560e01c806367a14f0611610151578063cce84392116100c3578063e78c266c11610087578063e78c266c14610454578063e9a532301461045c578063f1132b3014610464578063f7d92d861461046c578063f98447ac14610474578063ff7e88ec1461047c57610274565b8063cce8439214610421578063cf4ece1514610429578063d547741f14610431578063dadf56ac14610444578063e6217e3a1461044c57610274565b8063a217fddf11610115578063a217fddf146103e6578063a32c5e59146103ee578063a78e746f146103f6578063b6f928be146103fe578063bfb7dc9914610406578063ca15c8731461040e57610274565b806367a14f06146103a85780636b584775146103b0578063762ddb59146103b85780639010d07c146103c057806391d14854146103d357610274565b806336568abe116101ea5780635261ad5a116101ae5780635261ad5a1461036257806357f276ff1461036a5780635b5c251f1461037d5780635db531a1146103855780635f4134661461038d578063645d2c411461039557610274565b806336568abe1461032f5780633ab76e9f146103425780633f86ea7c1461034a57806349b5e105146103525780634d84c6d81461035a57610274565b80632436329d1161023c5780632436329d146102dc578063248a9ca3146102f15780632f2ff15d146103045780632fb5658514610317578063326a55e01461031f578063329a8cfa1461032757610274565b806301ffc9a714610279578063024bebe9146102a2578063130f6320146102b757806317314d5a146102cc57806321d7f008146102d4575b600080fd5b61028c610287366004611eb0565b610484565b6040516102999190611f79565b60405180910390f35b6102aa6104af565b6040516102999190611f65565b6102ca6102c5366004611e48565b6104be565b005b6102ca6104d5565b6102aa6104e0565b6102e46104ef565b6040516102999190611f84565b6102e46102ff366004611e48565b610501565b6102ca610312366004611e60565b610516565b61028c61053d565b6102ca61054d565b6102ca61055f565b6102ca61033d366004611e60565b610648565b6102aa61066a565b6102aa610679565b6102ca610688565b6102ca610555565b6102e4610690565b6102ca610378366004611e48565b610696565b6102aa61069f565b6102ca6106ae565b6102aa6106b6565b6102ca6103a3366004611e48565b6106c5565b6102aa61071c565b6102aa61072b565b6102aa61073a565b6102aa6103ce366004611e8f565b610749565b61028c6103e1366004611e60565b610768565b6102e4610791565b6102e4610796565b61028c6107a8565b6102aa6107b8565b6102aa6107c7565b6102e461041c366004611e48565b6107d6565b6102e46107ed565b6102e46107ff565b6102ca61043f366004611e60565b610811565b6102aa61081b565b6102aa61082a565b6102aa610839565b6102e4610848565b6102ca61085a565b6102ca610862565b6102aa6108ed565b61028c6108fc565b60006001600160e01b03198216635a05180f60e01b14806104a957506104a982610ca7565b92915050565b600a546001600160a01b031681565b6104c781610ccc565b506104d181610e41565b5050565b6104dd610fc4565b50565b6003546001600160a01b031681565b60008051602061220e83398151915281565b60009081526020819052604090206001015490565b610520828261110a565b60008281526001602052604090206105389082610916565b505050565b600e54600160b01b900460ff1681565b61055561112e565b61055d611389565b565b61057760008051602061226e83398151915233610768565b80610595575061059560008051602061222e83398151915233610768565b806105b357506105b360008051602061220e83398151915233610768565b6105d85760405162461bcd60e51b81526004016105cf9061205c565b60405180910390fd5b600e60009054906101000a90046001600160a01b03166001600160a01b031663329a8cfa6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561062857600080fd5b505af115801561063c573d6000803e3d6000fd5b5050505061055d6106ae565b61065282826113c5565b60008281526001602052604090206105389082611407565b600e546001600160a01b031681565b6007546001600160a01b031681565b61055d61112e565b60125481565b6104d18161141c565b600b546001600160a01b031681565b61055d611652565b600c546001600160a01b031681565b6106dd60008051602061220e83398151915233610768565b806106fb57506106fb60008051602061226e83398151915233610768565b6107175760405162461bcd60e51b81526004016105cf906120b6565b601255565b600f546001600160a01b031681565b6008546001600160a01b031681565b6004546001600160a01b031681565b6000828152600160205260408120610761908361178e565b9392505050565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b600081565b60008051602061226e83398151915281565b600e54600160a01b900460ff1681565b6010546001600160a01b031681565b6005546001600160a01b031681565b60008181526001602052604081206104a99061179a565b60008051602061228e83398151915281565b60008051602061224e83398151915281565b61065282826117a5565b6009546001600160a01b031681565b600d546001600160a01b031681565b6002546001600160a01b031681565b60008051602061222e83398151915281565b61055d6117c4565b61087960008051602061226e83398151915261141c565b5061089160008051602061222e83398151915261141c565b506108a960008051602061220e83398151915261141c565b506108c160008051602061224e83398151915261141c565b506108d960008051602061228e83398151915261141c565b506108e4600061141c565b5061055d611652565b6006546001600160a01b031681565b600e54600160a81b900460ff1681565b6104d182826118fb565b6000610761836001600160a01b038416611980565b600e60009054906101000a90046001600160a01b03166001600160a01b03166321d7f0086040518163ffffffff1660e01b815260040160206040518083038186803b15801561097957600080fd5b505afa15801561098d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109b19190611e0c565b600380546001600160a01b0319166001600160a01b03928316179055600e546040805163762ddb5960e01b81529051919092169163762ddb59916004808301926020929190829003018186803b158015610a0a57600080fd5b505afa158015610a1e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a429190611e0c565b600480546001600160a01b0319166001600160a01b03928316178155600e546040805163bfb7dc9960e01b81529051919093169263bfb7dc999281810192602092909190829003018186803b158015610a9a57600080fd5b505afa158015610aae573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ad29190611e0c565b600580546001600160a01b0319166001600160a01b03928316179055600e5460408051633e6111eb60e21b81529051919092169163f98447ac916004808301926020929190829003018186803b158015610b2b57600080fd5b505afa158015610b3f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b639190611e0c565b600680546001600160a01b0319166001600160a01b03928316179055600e5460408051630fe1ba9f60e21b815290519190921691633f86ea7c916004808301926020929190829003018186803b158015610bbc57600080fd5b505afa158015610bd0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bf49190611e0c565b600780546001600160a01b0319166001600160a01b03928316179055600e5460408051636b58477560e01b815290519190921691636b584775916004808301926020929190829003018186803b158015610c4d57600080fd5b505afa158015610c61573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c859190611e0c565b600880546001600160a01b0319166001600160a01b0392909216919091179055565b60006001600160e01b03198216637965db0b60e01b14806104a957506104a9826119ca565b60405163ca15c87360e01b81526000908190309063ca15c87390610cf4908690600401611f84565b60206040518083038186803b158015610d0c57600080fd5b505afa158015610d20573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d449190611ed8565b905060005b81811015610e3757604051632404341f60e21b81526000903090639010d07c90610d799088908690600401611fa4565b60206040518083038186803b158015610d9157600080fd5b505afa158015610da5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dc99190611e0c565b60405163d547741f60e01b8152909150309063d547741f90610df19088908590600401611f8d565b600060405180830381600087803b158015610e0b57600080fd5b505af1158015610e1f573d6000803e3d6000fd5b50505050508080610e2f906121c7565b915050610d49565b5060019392505050565b600e5460405163ca15c87360e01b815260009182916001600160a01b039091169063ca15c87390610e76908690600401611f84565b60206040518083038186803b158015610e8e57600080fd5b505afa158015610ea2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ec69190611ed8565b905060005b81811015610e3757600e54604051632404341f60e21b81526000916001600160a01b031690639010d07c90610f069088908690600401611fa4565b60206040518083038186803b158015610f1e57600080fd5b505afa158015610f32573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f569190611e0c565b604051632f2ff15d60e01b81529091503090632f2ff15d90610f7e9088908590600401611f8d565b600060405180830381600087803b158015610f9857600080fd5b505af1158015610fac573d6000803e3d6000fd5b50505050508080610fbc906121c7565b915050610ecb565b6000610fdd60008051602061226e833981519152610ccc565b50610ff560008051602061226e833981519152610e41565b610ffe57600080fd5b61101560008051602061222e833981519152610ccc565b5061102d60008051602061222e833981519152610e41565b61103657600080fd5b61104d60008051602061220e833981519152610ccc565b5061106560008051602061220e833981519152610e41565b61106e57600080fd5b61108560008051602061224e833981519152610ccc565b5061109d60008051602061224e833981519152610e41565b6110a657600080fd5b6110bd60008051602061228e833981519152610ccc565b506110d560008051602061228e833981519152610e41565b6110de57600080fd5b6110e86000610ccc565b506110f36000610e41565b6110fc57600080fd5b611104611652565b50600190565b61111382610501565b6111248161111f6119e3565b6119e7565b61053883836118fb565b600e60009054906101000a90046001600160a01b03166001600160a01b031663dadf56ac6040518163ffffffff1660e01b815260040160206040518083038186803b15801561117c57600080fd5b505afa158015611190573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111b49190611e0c565b600980546001600160a01b0319166001600160a01b03928316179055600e546040805163024bebe960e01b81529051919092169163024bebe9916004808301926020929190829003018186803b15801561120d57600080fd5b505afa158015611221573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112459190611e0c565b600a80546001600160a01b0319166001600160a01b03928316179055600e5460408051635b5c251f60e01b815290519190921691635b5c251f916004808301926020929190829003018186803b15801561129e57600080fd5b505afa1580156112b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112d69190611e0c565b600b80546001600160a01b0319166001600160a01b03928316179055600e5460408051637310bf1d60e11b81529051919092169163e6217e3a916004808301926020929190829003018186803b15801561132f57600080fd5b505afa158015611343573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113679190611e0c565b600d80546001600160a01b0319166001600160a01b0392909216919091179055565b61139161092b565b600454600f80546001600160a01b039283166001600160a01b03199182161790915560085460108054919093169116179055565b6113cd6119e3565b6001600160a01b0316816001600160a01b0316146113fd5760405162461bcd60e51b81526004016105cf906120e3565b6104d18282611a4b565b6000610761836001600160a01b038416611ace565b600e5460405163ca15c87360e01b815260009182916001600160a01b039091169063ca15c87390611451908690600401611f84565b60206040518083038186803b15801561146957600080fd5b505afa15801561147d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114a19190611ed8565b60405163ca15c87360e01b8152909150600090309063ca15c873906114ca908790600401611f84565b60206040518083038186803b1580156114e257600080fd5b505afa1580156114f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061151a9190611ed8565b905060006115288284612169565b90506000811161154a5760405162461bcd60e51b81526004016105cf9061208c565b60005b8181101561164657600e54604051632404341f60e21b81526000916001600160a01b031690639010d07c90611588908a908690600401611fa4565b60206040518083038186803b1580156115a057600080fd5b505afa1580156115b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115d89190611e0c565b604051632f2ff15d60e01b81529091503090632f2ff15d90611600908a908590600401611f8d565b600060405180830381600087803b15801561161a57600080fd5b505af115801561162e573d6000803e3d6000fd5b5050505050808061163e906121c7565b91505061154d565b50600195945050505050565b600e60009054906101000a90046001600160a01b03166001600160a01b031663ff7e88ec6040518163ffffffff1660e01b815260040160206040518083038186803b1580156116a057600080fd5b505afa1580156116b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116d89190611e28565b600e8054911515600160a81b0260ff60a81b19909216919091179081905560408051632fb5658560e01b815290516001600160a01b0390921691632fb5658591600480820192602092909190829003018186803b15801561173857600080fd5b505afa15801561174c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117709190611e28565b600e8054911515600160b01b0260ff60b01b19909216919091179055565b60006107618383611be5565b60006104a982611c3e565b6117ae82610501565b6117ba8161111f6119e3565b6105388383611a4b565b600e60009054906101000a90046001600160a01b03166001600160a01b031663a44b93256040518163ffffffff1660e01b815260040160206040518083038186803b15801561181257600080fd5b505afa158015611826573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061184a9190611e28565b61185357600080fd5b600e60009054906101000a90046001600160a01b03166001600160a01b031663ac7cfac36040518163ffffffff1660e01b815260040160206040518083038186803b1580156118a157600080fd5b505afa1580156118b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118d99190611e0c565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6119058282610768565b6104d1576000828152602081815260408083206001600160a01b03851684529091529020805460ff1916600117905561193c6119e3565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b600061198c8383611c42565b6119c2575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556104a9565b5060006104a9565b6001600160e01b031981166301ffc9a760e01b14919050565b3390565b6119f18282610768565b6104d157611a09816001600160a01b03166014611c5a565b611a14836020611c5a565b604051602001611a25929190611ef0565b60408051601f198184030181529082905262461bcd60e51b82526105cf91600401611fb2565b611a558282610768565b156104d1576000828152602081815260408083206001600160a01b03851684529091529020805460ff19169055611a8a6119e3565b6001600160a01b0316816001600160a01b0316837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45050565b60008181526001830160205260408120548015611bdb576000611af2600183612169565b8554909150600090611b0690600190612169565b90506000866000018281548110611b2d57634e487b7160e01b600052603260045260246000fd5b9060005260206000200154905080876000018481548110611b5e57634e487b7160e01b600052603260045260246000fd5b600091825260208083209091019290925582815260018901909152604090208490558654879080611b9f57634e487b7160e01b600052603160045260246000fd5b600190038181906000526020600020016000905590558660010160008781526020019081526020016000206000905560019450505050506104a9565b60009150506104a9565b81546000908210611c085760405162461bcd60e51b81526004016105cf90611fe5565b826000018281548110611c2b57634e487b7160e01b600052603260045260246000fd5b9060005260206000200154905092915050565b5490565b60009081526001919091016020526040902054151590565b60606000611c6983600261214a565b611c74906002612132565b67ffffffffffffffff811115611c9a57634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015611cc4576020820181803683370190505b509050600360fc1b81600081518110611ced57634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110611d2a57634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a9053506000611d4e84600261214a565b611d59906001612132565b90505b6001811115611ded576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110611d9b57634e487b7160e01b600052603260045260246000fd5b1a60f81b828281518110611dbf57634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a90535060049490941c93611de6816121b0565b9050611d5c565b5083156107615760405162461bcd60e51b81526004016105cf90612027565b600060208284031215611e1d578081fd5b8151610761816121f8565b600060208284031215611e39578081fd5b81518015158114610761578182fd5b600060208284031215611e59578081fd5b5035919050565b60008060408385031215611e72578081fd5b823591506020830135611e84816121f8565b809150509250929050565b60008060408385031215611ea1578182fd5b50508035926020909101359150565b600060208284031215611ec1578081fd5b81356001600160e01b031981168114610761578182fd5b600060208284031215611ee9578081fd5b5051919050565b60007f416363657373436f6e74726f6c3a206163636f756e742000000000000000000082528351611f28816017850160208801612180565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351611f59816028840160208801612180565b01602801949350505050565b6001600160a01b0391909116815260200190565b901515815260200190565b90815260200190565b9182526001600160a01b0316602082015260400190565b918252602082015260400190565b6000602082528251806020840152611fd1816040850160208701612180565b601f01601f19169190910160400192915050565b60208082526022908201527f456e756d657261626c655365743a20696e646578206f7574206f6620626f756e604082015261647360f01b606082015260800190565b6020808252818101527f537472696e67733a20686578206c656e67746820696e73756666696369656e74604082015260600190565b6020808252601690820152752cb7ba93b932903737ba103a3432903130b4b634b33360511b604082015260600190565b60208082526010908201526f4e6f7468696e6720746f2073796e632160801b604082015260600190565b602080825260139082015272596f75277265206e6f7420746865204a75727960681b604082015260600190565b6020808252602f908201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560408201526e103937b632b9903337b91039b2b63360891b606082015260800190565b60008219821115612145576121456121e2565b500190565b6000816000190483118215151615612164576121646121e2565b500290565b60008282101561217b5761217b6121e2565b500390565b60005b8381101561219b578181015183820152602001612183565b838111156121aa576000848401525b50505050565b6000816121bf576121bf6121e2565b506000190190565b60006000198214156121db576121db6121e2565b5060010190565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b03811681146104dd57600080fdfefa8e4989e1d689f7bc5c4b25b87efb51fecdecb19ba62847e29c759e12a89acd048bc71fa1cb2c119c339cf9cf00a97996a19a9d991ce5fe049f2fa5459e7990f0f4b159a6e2a4815eb3ca3df080bfa70c9270662c59bcaa4479a456220183e60538d24a8b7882d7b2e36af243d4af61c23e86e3daa6cb8c887b53220b2f57207c9d7f6f02908185bffb3f7fc9afb29fd7bf93675af8fd4b655ee05c2cee1e0ea2646970667358221220d6571a55028760277a6ecae2639c1f7e95adf76b3bfbc8ae4794ee79a19a90be64736f6c63430008000033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106102745760003560e01c806367a14f0611610151578063cce84392116100c3578063e78c266c11610087578063e78c266c14610454578063e9a532301461045c578063f1132b3014610464578063f7d92d861461046c578063f98447ac14610474578063ff7e88ec1461047c57610274565b8063cce8439214610421578063cf4ece1514610429578063d547741f14610431578063dadf56ac14610444578063e6217e3a1461044c57610274565b8063a217fddf11610115578063a217fddf146103e6578063a32c5e59146103ee578063a78e746f146103f6578063b6f928be146103fe578063bfb7dc9914610406578063ca15c8731461040e57610274565b806367a14f06146103a85780636b584775146103b0578063762ddb59146103b85780639010d07c146103c057806391d14854146103d357610274565b806336568abe116101ea5780635261ad5a116101ae5780635261ad5a1461036257806357f276ff1461036a5780635b5c251f1461037d5780635db531a1146103855780635f4134661461038d578063645d2c411461039557610274565b806336568abe1461032f5780633ab76e9f146103425780633f86ea7c1461034a57806349b5e105146103525780634d84c6d81461035a57610274565b80632436329d1161023c5780632436329d146102dc578063248a9ca3146102f15780632f2ff15d146103045780632fb5658514610317578063326a55e01461031f578063329a8cfa1461032757610274565b806301ffc9a714610279578063024bebe9146102a2578063130f6320146102b757806317314d5a146102cc57806321d7f008146102d4575b600080fd5b61028c610287366004611eb0565b610484565b6040516102999190611f79565b60405180910390f35b6102aa6104af565b6040516102999190611f65565b6102ca6102c5366004611e48565b6104be565b005b6102ca6104d5565b6102aa6104e0565b6102e46104ef565b6040516102999190611f84565b6102e46102ff366004611e48565b610501565b6102ca610312366004611e60565b610516565b61028c61053d565b6102ca61054d565b6102ca61055f565b6102ca61033d366004611e60565b610648565b6102aa61066a565b6102aa610679565b6102ca610688565b6102ca610555565b6102e4610690565b6102ca610378366004611e48565b610696565b6102aa61069f565b6102ca6106ae565b6102aa6106b6565b6102ca6103a3366004611e48565b6106c5565b6102aa61071c565b6102aa61072b565b6102aa61073a565b6102aa6103ce366004611e8f565b610749565b61028c6103e1366004611e60565b610768565b6102e4610791565b6102e4610796565b61028c6107a8565b6102aa6107b8565b6102aa6107c7565b6102e461041c366004611e48565b6107d6565b6102e46107ed565b6102e46107ff565b6102ca61043f366004611e60565b610811565b6102aa61081b565b6102aa61082a565b6102aa610839565b6102e4610848565b6102ca61085a565b6102ca610862565b6102aa6108ed565b61028c6108fc565b60006001600160e01b03198216635a05180f60e01b14806104a957506104a982610ca7565b92915050565b600a546001600160a01b031681565b6104c781610ccc565b506104d181610e41565b5050565b6104dd610fc4565b50565b6003546001600160a01b031681565b60008051602061220e83398151915281565b60009081526020819052604090206001015490565b610520828261110a565b60008281526001602052604090206105389082610916565b505050565b600e54600160b01b900460ff1681565b61055561112e565b61055d611389565b565b61057760008051602061226e83398151915233610768565b80610595575061059560008051602061222e83398151915233610768565b806105b357506105b360008051602061220e83398151915233610768565b6105d85760405162461bcd60e51b81526004016105cf9061205c565b60405180910390fd5b600e60009054906101000a90046001600160a01b03166001600160a01b031663329a8cfa6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561062857600080fd5b505af115801561063c573d6000803e3d6000fd5b5050505061055d6106ae565b61065282826113c5565b60008281526001602052604090206105389082611407565b600e546001600160a01b031681565b6007546001600160a01b031681565b61055d61112e565b60125481565b6104d18161141c565b600b546001600160a01b031681565b61055d611652565b600c546001600160a01b031681565b6106dd60008051602061220e83398151915233610768565b806106fb57506106fb60008051602061226e83398151915233610768565b6107175760405162461bcd60e51b81526004016105cf906120b6565b601255565b600f546001600160a01b031681565b6008546001600160a01b031681565b6004546001600160a01b031681565b6000828152600160205260408120610761908361178e565b9392505050565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b600081565b60008051602061226e83398151915281565b600e54600160a01b900460ff1681565b6010546001600160a01b031681565b6005546001600160a01b031681565b60008181526001602052604081206104a99061179a565b60008051602061228e83398151915281565b60008051602061224e83398151915281565b61065282826117a5565b6009546001600160a01b031681565b600d546001600160a01b031681565b6002546001600160a01b031681565b60008051602061222e83398151915281565b61055d6117c4565b61087960008051602061226e83398151915261141c565b5061089160008051602061222e83398151915261141c565b506108a960008051602061220e83398151915261141c565b506108c160008051602061224e83398151915261141c565b506108d960008051602061228e83398151915261141c565b506108e4600061141c565b5061055d611652565b6006546001600160a01b031681565b600e54600160a81b900460ff1681565b6104d182826118fb565b6000610761836001600160a01b038416611980565b600e60009054906101000a90046001600160a01b03166001600160a01b03166321d7f0086040518163ffffffff1660e01b815260040160206040518083038186803b15801561097957600080fd5b505afa15801561098d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109b19190611e0c565b600380546001600160a01b0319166001600160a01b03928316179055600e546040805163762ddb5960e01b81529051919092169163762ddb59916004808301926020929190829003018186803b158015610a0a57600080fd5b505afa158015610a1e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a429190611e0c565b600480546001600160a01b0319166001600160a01b03928316178155600e546040805163bfb7dc9960e01b81529051919093169263bfb7dc999281810192602092909190829003018186803b158015610a9a57600080fd5b505afa158015610aae573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ad29190611e0c565b600580546001600160a01b0319166001600160a01b03928316179055600e5460408051633e6111eb60e21b81529051919092169163f98447ac916004808301926020929190829003018186803b158015610b2b57600080fd5b505afa158015610b3f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b639190611e0c565b600680546001600160a01b0319166001600160a01b03928316179055600e5460408051630fe1ba9f60e21b815290519190921691633f86ea7c916004808301926020929190829003018186803b158015610bbc57600080fd5b505afa158015610bd0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bf49190611e0c565b600780546001600160a01b0319166001600160a01b03928316179055600e5460408051636b58477560e01b815290519190921691636b584775916004808301926020929190829003018186803b158015610c4d57600080fd5b505afa158015610c61573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c859190611e0c565b600880546001600160a01b0319166001600160a01b0392909216919091179055565b60006001600160e01b03198216637965db0b60e01b14806104a957506104a9826119ca565b60405163ca15c87360e01b81526000908190309063ca15c87390610cf4908690600401611f84565b60206040518083038186803b158015610d0c57600080fd5b505afa158015610d20573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d449190611ed8565b905060005b81811015610e3757604051632404341f60e21b81526000903090639010d07c90610d799088908690600401611fa4565b60206040518083038186803b158015610d9157600080fd5b505afa158015610da5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dc99190611e0c565b60405163d547741f60e01b8152909150309063d547741f90610df19088908590600401611f8d565b600060405180830381600087803b158015610e0b57600080fd5b505af1158015610e1f573d6000803e3d6000fd5b50505050508080610e2f906121c7565b915050610d49565b5060019392505050565b600e5460405163ca15c87360e01b815260009182916001600160a01b039091169063ca15c87390610e76908690600401611f84565b60206040518083038186803b158015610e8e57600080fd5b505afa158015610ea2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ec69190611ed8565b905060005b81811015610e3757600e54604051632404341f60e21b81526000916001600160a01b031690639010d07c90610f069088908690600401611fa4565b60206040518083038186803b158015610f1e57600080fd5b505afa158015610f32573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f569190611e0c565b604051632f2ff15d60e01b81529091503090632f2ff15d90610f7e9088908590600401611f8d565b600060405180830381600087803b158015610f9857600080fd5b505af1158015610fac573d6000803e3d6000fd5b50505050508080610fbc906121c7565b915050610ecb565b6000610fdd60008051602061226e833981519152610ccc565b50610ff560008051602061226e833981519152610e41565b610ffe57600080fd5b61101560008051602061222e833981519152610ccc565b5061102d60008051602061222e833981519152610e41565b61103657600080fd5b61104d60008051602061220e833981519152610ccc565b5061106560008051602061220e833981519152610e41565b61106e57600080fd5b61108560008051602061224e833981519152610ccc565b5061109d60008051602061224e833981519152610e41565b6110a657600080fd5b6110bd60008051602061228e833981519152610ccc565b506110d560008051602061228e833981519152610e41565b6110de57600080fd5b6110e86000610ccc565b506110f36000610e41565b6110fc57600080fd5b611104611652565b50600190565b61111382610501565b6111248161111f6119e3565b6119e7565b61053883836118fb565b600e60009054906101000a90046001600160a01b03166001600160a01b031663dadf56ac6040518163ffffffff1660e01b815260040160206040518083038186803b15801561117c57600080fd5b505afa158015611190573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111b49190611e0c565b600980546001600160a01b0319166001600160a01b03928316179055600e546040805163024bebe960e01b81529051919092169163024bebe9916004808301926020929190829003018186803b15801561120d57600080fd5b505afa158015611221573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112459190611e0c565b600a80546001600160a01b0319166001600160a01b03928316179055600e5460408051635b5c251f60e01b815290519190921691635b5c251f916004808301926020929190829003018186803b15801561129e57600080fd5b505afa1580156112b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112d69190611e0c565b600b80546001600160a01b0319166001600160a01b03928316179055600e5460408051637310bf1d60e11b81529051919092169163e6217e3a916004808301926020929190829003018186803b15801561132f57600080fd5b505afa158015611343573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113679190611e0c565b600d80546001600160a01b0319166001600160a01b0392909216919091179055565b61139161092b565b600454600f80546001600160a01b039283166001600160a01b03199182161790915560085460108054919093169116179055565b6113cd6119e3565b6001600160a01b0316816001600160a01b0316146113fd5760405162461bcd60e51b81526004016105cf906120e3565b6104d18282611a4b565b6000610761836001600160a01b038416611ace565b600e5460405163ca15c87360e01b815260009182916001600160a01b039091169063ca15c87390611451908690600401611f84565b60206040518083038186803b15801561146957600080fd5b505afa15801561147d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114a19190611ed8565b60405163ca15c87360e01b8152909150600090309063ca15c873906114ca908790600401611f84565b60206040518083038186803b1580156114e257600080fd5b505afa1580156114f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061151a9190611ed8565b905060006115288284612169565b90506000811161154a5760405162461bcd60e51b81526004016105cf9061208c565b60005b8181101561164657600e54604051632404341f60e21b81526000916001600160a01b031690639010d07c90611588908a908690600401611fa4565b60206040518083038186803b1580156115a057600080fd5b505afa1580156115b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115d89190611e0c565b604051632f2ff15d60e01b81529091503090632f2ff15d90611600908a908590600401611f8d565b600060405180830381600087803b15801561161a57600080fd5b505af115801561162e573d6000803e3d6000fd5b5050505050808061163e906121c7565b91505061154d565b50600195945050505050565b600e60009054906101000a90046001600160a01b03166001600160a01b031663ff7e88ec6040518163ffffffff1660e01b815260040160206040518083038186803b1580156116a057600080fd5b505afa1580156116b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116d89190611e28565b600e8054911515600160a81b0260ff60a81b19909216919091179081905560408051632fb5658560e01b815290516001600160a01b0390921691632fb5658591600480820192602092909190829003018186803b15801561173857600080fd5b505afa15801561174c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117709190611e28565b600e8054911515600160b01b0260ff60b01b19909216919091179055565b60006107618383611be5565b60006104a982611c3e565b6117ae82610501565b6117ba8161111f6119e3565b6105388383611a4b565b600e60009054906101000a90046001600160a01b03166001600160a01b031663a44b93256040518163ffffffff1660e01b815260040160206040518083038186803b15801561181257600080fd5b505afa158015611826573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061184a9190611e28565b61185357600080fd5b600e60009054906101000a90046001600160a01b03166001600160a01b031663ac7cfac36040518163ffffffff1660e01b815260040160206040518083038186803b1580156118a157600080fd5b505afa1580156118b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118d99190611e0c565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6119058282610768565b6104d1576000828152602081815260408083206001600160a01b03851684529091529020805460ff1916600117905561193c6119e3565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b600061198c8383611c42565b6119c2575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556104a9565b5060006104a9565b6001600160e01b031981166301ffc9a760e01b14919050565b3390565b6119f18282610768565b6104d157611a09816001600160a01b03166014611c5a565b611a14836020611c5a565b604051602001611a25929190611ef0565b60408051601f198184030181529082905262461bcd60e51b82526105cf91600401611fb2565b611a558282610768565b156104d1576000828152602081815260408083206001600160a01b03851684529091529020805460ff19169055611a8a6119e3565b6001600160a01b0316816001600160a01b0316837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45050565b60008181526001830160205260408120548015611bdb576000611af2600183612169565b8554909150600090611b0690600190612169565b90506000866000018281548110611b2d57634e487b7160e01b600052603260045260246000fd5b9060005260206000200154905080876000018481548110611b5e57634e487b7160e01b600052603260045260246000fd5b600091825260208083209091019290925582815260018901909152604090208490558654879080611b9f57634e487b7160e01b600052603160045260246000fd5b600190038181906000526020600020016000905590558660010160008781526020019081526020016000206000905560019450505050506104a9565b60009150506104a9565b81546000908210611c085760405162461bcd60e51b81526004016105cf90611fe5565b826000018281548110611c2b57634e487b7160e01b600052603260045260246000fd5b9060005260206000200154905092915050565b5490565b60009081526001919091016020526040902054151590565b60606000611c6983600261214a565b611c74906002612132565b67ffffffffffffffff811115611c9a57634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015611cc4576020820181803683370190505b509050600360fc1b81600081518110611ced57634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110611d2a57634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a9053506000611d4e84600261214a565b611d59906001612132565b90505b6001811115611ded576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110611d9b57634e487b7160e01b600052603260045260246000fd5b1a60f81b828281518110611dbf57634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a90535060049490941c93611de6816121b0565b9050611d5c565b5083156107615760405162461bcd60e51b81526004016105cf90612027565b600060208284031215611e1d578081fd5b8151610761816121f8565b600060208284031215611e39578081fd5b81518015158114610761578182fd5b600060208284031215611e59578081fd5b5035919050565b60008060408385031215611e72578081fd5b823591506020830135611e84816121f8565b809150509250929050565b60008060408385031215611ea1578182fd5b50508035926020909101359150565b600060208284031215611ec1578081fd5b81356001600160e01b031981168114610761578182fd5b600060208284031215611ee9578081fd5b5051919050565b60007f416363657373436f6e74726f6c3a206163636f756e742000000000000000000082528351611f28816017850160208801612180565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351611f59816028840160208801612180565b01602801949350505050565b6001600160a01b0391909116815260200190565b901515815260200190565b90815260200190565b9182526001600160a01b0316602082015260400190565b918252602082015260400190565b6000602082528251806020840152611fd1816040850160208701612180565b601f01601f19169190910160400192915050565b60208082526022908201527f456e756d657261626c655365743a20696e646578206f7574206f6620626f756e604082015261647360f01b606082015260800190565b6020808252818101527f537472696e67733a20686578206c656e67746820696e73756666696369656e74604082015260600190565b6020808252601690820152752cb7ba93b932903737ba103a3432903130b4b634b33360511b604082015260600190565b60208082526010908201526f4e6f7468696e6720746f2073796e632160801b604082015260600190565b602080825260139082015272596f75277265206e6f7420746865204a75727960681b604082015260600190565b6020808252602f908201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560408201526e103937b632b9903337b91039b2b63360891b606082015260800190565b60008219821115612145576121456121e2565b500190565b6000816000190483118215151615612164576121646121e2565b500290565b60008282101561217b5761217b6121e2565b500390565b60005b8381101561219b578181015183820152602001612183565b838111156121aa576000848401525b50505050565b6000816121bf576121bf6121e2565b506000190190565b60006000198214156121db576121db6121e2565b5060010190565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b03811681146104dd57600080fdfefa8e4989e1d689f7bc5c4b25b87efb51fecdecb19ba62847e29c759e12a89acd048bc71fa1cb2c119c339cf9cf00a97996a19a9d991ce5fe049f2fa5459e7990f0f4b159a6e2a4815eb3ca3df080bfa70c9270662c59bcaa4479a456220183e60538d24a8b7882d7b2e36af243d4af61c23e86e3daa6cb8c887b53220b2f57207c9d7f6f02908185bffb3f7fc9afb29fd7bf93675af8fd4b655ee05c2cee1e0ea2646970667358221220d6571a55028760277a6ecae2639c1f7e95adf76b3bfbc8ae4794ee79a19a90be64736f6c63430008000033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:628:27",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:27",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "95:229:27",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "141:26:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "150:6:27"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "158:6:27"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "143:6:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "143:22:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "143:22:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "116:7:27"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "125:9:27"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "112:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "112:23:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "137:2:27",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "108:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "108:32:27"
                  },
                  "nodeType": "YulIf",
                  "src": "105:2:27"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "176:29:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "195:9:27"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "189:5:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "189:16:27"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "180:5:27",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "268:26:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "277:6:27"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "285:6:27"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "270:6:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "270:22:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "270:22:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "227:5:27"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "238:5:27"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "253:3:27",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "258:1:27",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "249:3:27"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "249:11:27"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "262:1:27",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "245:3:27"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "245:19:27"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "234:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "234:31:27"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "224:2:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "224:42:27"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "217:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "217:50:27"
                  },
                  "nodeType": "YulIf",
                  "src": "214:2:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "303:15:27",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "313:5:27"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "303:6:27"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "61:9:27",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "72:7:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "84:6:27",
                "type": ""
              }
            ],
            "src": "14:310:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "407:219:27",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "453:26:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "462:6:27"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "470:6:27"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "455:6:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "455:22:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "455:22:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "428:7:27"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "437:9:27"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "424:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "424:23:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "449:2:27",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "420:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "420:32:27"
                  },
                  "nodeType": "YulIf",
                  "src": "417:2:27"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "488:29:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "507:9:27"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "501:5:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "501:16:27"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "492:5:27",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "570:26:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "579:6:27"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "587:6:27"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "572:6:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "572:22:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "572:22:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "539:5:27"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "560:5:27"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "553:6:27"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "553:13:27"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "546:6:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "546:21:27"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "536:2:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "536:32:27"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "529:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "529:40:27"
                  },
                  "nodeType": "YulIf",
                  "src": "526:2:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "605:15:27",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "615:5:27"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "605:6:27"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "373:9:27",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "384:7:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "396:6:27",
                "type": ""
              }
            ],
            "src": "329:297:27"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(value0, value0) }\n        value0 := value\n    }\n}",
      "id": 27,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:8702:27",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:27",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "95:182:27",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "141:26:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "150:6:27"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "158:6:27"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "143:6:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "143:22:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "143:22:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "116:7:27"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "125:9:27"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "112:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "112:23:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "137:2:27",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "108:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "108:32:27"
                  },
                  "nodeType": "YulIf",
                  "src": "105:2:27"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "176:29:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "195:9:27"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "189:5:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "189:16:27"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "180:5:27",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "241:5:27"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "214:26:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "214:33:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "214:33:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "256:15:27",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "266:5:27"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "256:6:27"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "61:9:27",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "72:7:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "84:6:27",
                "type": ""
              }
            ],
            "src": "14:263:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "360:219:27",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "406:26:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "415:6:27"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "423:6:27"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "408:6:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "408:22:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "408:22:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "381:7:27"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "390:9:27"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "377:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "377:23:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "402:2:27",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "373:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "373:32:27"
                  },
                  "nodeType": "YulIf",
                  "src": "370:2:27"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "441:29:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "460:9:27"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "454:5:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "454:16:27"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "445:5:27",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "523:26:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "532:6:27"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "540:6:27"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "525:6:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "525:22:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "525:22:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "492:5:27"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "513:5:27"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "506:6:27"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "506:13:27"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "499:6:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "499:21:27"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "489:2:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "489:32:27"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "482:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "482:40:27"
                  },
                  "nodeType": "YulIf",
                  "src": "479:2:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "558:15:27",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "568:5:27"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "558:6:27"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "326:9:27",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "337:7:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "349:6:27",
                "type": ""
              }
            ],
            "src": "282:297:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "654:120:27",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "700:26:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "709:6:27"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "717:6:27"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "702:6:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "702:22:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "702:22:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "675:7:27"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "684:9:27"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "671:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "671:23:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "696:2:27",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "667:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "667:32:27"
                  },
                  "nodeType": "YulIf",
                  "src": "664:2:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "735:33:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "758:9:27"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "745:12:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "745:23:27"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "735:6:27"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "620:9:27",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "631:7:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "643:6:27",
                "type": ""
              }
            ],
            "src": "584:190:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "866:240:27",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "912:26:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "921:6:27"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "929:6:27"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "914:6:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "914:22:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "914:22:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "887:7:27"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "896:9:27"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "883:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "883:23:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "908:2:27",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "879:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "879:32:27"
                  },
                  "nodeType": "YulIf",
                  "src": "876:2:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "947:33:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "970:9:27"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "957:12:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "957:23:27"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "947:6:27"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "989:45:27",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1019:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1030:2:27",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1015:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1015:18:27"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1002:12:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1002:32:27"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "993:5:27",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1070:5:27"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "1043:26:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1043:33:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1043:33:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1085:15:27",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1095:5:27"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1085:6:27"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "824:9:27",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "835:7:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "847:6:27",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "855:6:27",
                "type": ""
              }
            ],
            "src": "779:327:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1198:171:27",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1244:26:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1253:6:27"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1261:6:27"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1246:6:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1246:22:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1246:22:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1219:7:27"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1228:9:27"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1215:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1215:23:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1240:2:27",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1211:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1211:32:27"
                  },
                  "nodeType": "YulIf",
                  "src": "1208:2:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1279:33:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1302:9:27"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1289:12:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1289:23:27"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1279:6:27"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1321:42:27",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1348:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1359:2:27",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1344:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1344:18:27"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1331:12:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1331:32:27"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1321:6:27"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1156:9:27",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1167:7:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1179:6:27",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1187:6:27",
                "type": ""
              }
            ],
            "src": "1111:258:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1443:237:27",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1489:26:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1498:6:27"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1506:6:27"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1491:6:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1491:22:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1491:22:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1464:7:27"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1473:9:27"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1460:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1460:23:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1485:2:27",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1456:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1456:32:27"
                  },
                  "nodeType": "YulIf",
                  "src": "1453:2:27"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1524:36:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1550:9:27"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1537:12:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1537:23:27"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1528:5:27",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1624:26:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1633:6:27"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1641:6:27"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1626:6:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1626:22:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1626:22:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1582:5:27"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1593:5:27"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1604:3:27",
                                    "type": "",
                                    "value": "224"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1609:10:27",
                                    "type": "",
                                    "value": "0xffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "1600:3:27"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1600:20:27"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "1589:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1589:32:27"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1579:2:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1579:43:27"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1572:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1572:51:27"
                  },
                  "nodeType": "YulIf",
                  "src": "1569:2:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1659:15:27",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1669:5:27"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1659:6:27"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes4",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1409:9:27",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1420:7:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1432:6:27",
                "type": ""
              }
            ],
            "src": "1374:306:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1755:120:27",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1801:26:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1810:6:27"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1818:6:27"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1803:6:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1803:22:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1803:22:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1776:7:27"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1785:9:27"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1772:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1772:23:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1797:2:27",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1768:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1768:32:27"
                  },
                  "nodeType": "YulIf",
                  "src": "1765:2:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1836:33:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1859:9:27"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1846:12:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1846:23:27"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1836:6:27"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1721:9:27",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1732:7:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1744:6:27",
                "type": ""
              }
            ],
            "src": "1685:190:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1961:113:27",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2007:26:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2016:6:27"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2024:6:27"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2009:6:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2009:22:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2009:22:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1982:7:27"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1991:9:27"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1978:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1978:23:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2003:2:27",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1974:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1974:32:27"
                  },
                  "nodeType": "YulIf",
                  "src": "1971:2:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2042:26:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2058:9:27"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2052:5:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2052:16:27"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2042:6:27"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1927:9:27",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1938:7:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1950:6:27",
                "type": ""
              }
            ],
            "src": "1880:194:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2468:397:27",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2485:3:27"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2490:25:27",
                        "type": "",
                        "value": "AccessControl: account "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2478:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2478:38:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2478:38:27"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2525:27:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2545:6:27"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2539:5:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2539:13:27"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "2529:6:27",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2587:6:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2595:4:27",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2583:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2583:17:27"
                      },
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "2606:3:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2611:2:27",
                            "type": "",
                            "value": "23"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2602:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2602:12:27"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2616:6:27"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "2561:21:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2561:62:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2561:62:27"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2632:26:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2646:3:27"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2651:6:27"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2642:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2642:16:27"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "2636:2:27",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2678:2:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2682:2:27",
                            "type": "",
                            "value": "23"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2674:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2674:11:27"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2687:19:27",
                        "type": "",
                        "value": " is missing role "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2667:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2667:40:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2667:40:27"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2716:29:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "2738:6:27"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2732:5:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2732:13:27"
                  },
                  "variables": [
                    {
                      "name": "length_1",
                      "nodeType": "YulTypedName",
                      "src": "2720:8:27",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "2780:6:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2788:4:27",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2776:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2776:17:27"
                      },
                      {
                        "arguments": [
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2799:2:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2803:2:27",
                            "type": "",
                            "value": "40"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2795:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2795:11:27"
                      },
                      {
                        "name": "length_1",
                        "nodeType": "YulIdentifier",
                        "src": "2808:8:27"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "2754:21:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2754:63:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2754:63:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2826:33:27",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2841:2:27"
                          },
                          {
                            "name": "length_1",
                            "nodeType": "YulIdentifier",
                            "src": "2845:8:27"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2837:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2837:17:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2856:2:27",
                        "type": "",
                        "value": "40"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2833:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2833:26:27"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "2826:3:27"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2436:3:27",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2441:6:27",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2449:6:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2460:3:27",
                "type": ""
              }
            ],
            "src": "2079:786:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2971:102:27",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2981:26:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2993:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3004:2:27",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2989:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2989:18:27"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2981:4:27"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3023:9:27"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3038:6:27"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3054:3:27",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3059:1:27",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "3050:3:27"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3050:11:27"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3063:1:27",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "3046:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3046:19:27"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3034:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3034:32:27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3016:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3016:51:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3016:51:27"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2940:9:27",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2951:6:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2962:4:27",
                "type": ""
              }
            ],
            "src": "2870:203:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3173:92:27",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3183:26:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3195:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3206:2:27",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3191:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3191:18:27"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3183:4:27"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3225:9:27"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "3250:6:27"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "3243:6:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3243:14:27"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "3236:6:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3236:22:27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3218:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3218:41:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3218:41:27"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3142:9:27",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3153:6:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3164:4:27",
                "type": ""
              }
            ],
            "src": "3078:187:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3371:76:27",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3381:26:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3393:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3404:2:27",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3389:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3389:18:27"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3381:4:27"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3423:9:27"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3434:6:27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3416:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3416:25:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3416:25:27"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3340:9:27",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3351:6:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3362:4:27",
                "type": ""
              }
            ],
            "src": "3270:177:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3581:145:27",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3591:26:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3603:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3614:2:27",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3599:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3599:18:27"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3591:4:27"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3633:9:27"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3644:6:27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3626:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3626:25:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3626:25:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3671:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3682:2:27",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3667:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3667:18:27"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "3691:6:27"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3707:3:27",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3712:1:27",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "3703:3:27"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3703:11:27"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3716:1:27",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "3699:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3699:19:27"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3687:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3687:32:27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3660:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3660:60:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3660:60:27"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32_t_address__to_t_bytes32_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3542:9:27",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3553:6:27",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3561:6:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3572:4:27",
                "type": ""
              }
            ],
            "src": "3452:274:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3860:119:27",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3870:26:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3882:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3893:2:27",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3878:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3878:18:27"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3870:4:27"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3912:9:27"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3923:6:27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3905:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3905:25:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3905:25:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3950:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3961:2:27",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3946:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3946:18:27"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "3966:6:27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3939:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3939:34:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3939:34:27"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32_t_uint256__to_t_bytes32_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3821:9:27",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3832:6:27",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3840:6:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3851:4:27",
                "type": ""
              }
            ],
            "src": "3731:248:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4108:102:27",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4118:26:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4130:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4141:2:27",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4126:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4126:18:27"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4118:4:27"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4160:9:27"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4175:6:27"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4191:3:27",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4196:1:27",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "4187:3:27"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4187:11:27"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4200:1:27",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "4183:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4183:19:27"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4171:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4171:32:27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4153:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4153:51:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4153:51:27"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_AddressManager_$1183__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4077:9:27",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4088:6:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4099:4:27",
                "type": ""
              }
            ],
            "src": "3984:226:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4330:102:27",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4340:26:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4352:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4363:2:27",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4348:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4348:18:27"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4340:4:27"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4382:9:27"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4397:6:27"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4413:3:27",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4418:1:27",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "4409:3:27"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4409:11:27"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4422:1:27",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "4405:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4405:19:27"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4393:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4393:32:27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4375:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4375:51:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4375:51:27"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_ERC20_$3490__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4299:9:27",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4310:6:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4321:4:27",
                "type": ""
              }
            ],
            "src": "4215:217:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4554:102:27",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4564:26:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4576:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4587:2:27",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4572:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4572:18:27"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4564:4:27"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4606:9:27"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4621:6:27"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4637:3:27",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4642:1:27",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "4633:3:27"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4633:11:27"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4646:1:27",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "4629:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4629:19:27"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4617:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4617:32:27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4599:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4599:51:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4599:51:27"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_JuryPool_$628__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4523:9:27",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4534:6:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4545:4:27",
                "type": ""
              }
            ],
            "src": "4437:219:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4782:262:27",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4799:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4810:2:27",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4792:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4792:21:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4792:21:27"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4822:27:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4842:6:27"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "4836:5:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4836:13:27"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "4826:6:27",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4869:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4880:2:27",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4865:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4865:18:27"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4885:6:27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4858:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4858:34:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4858:34:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4927:6:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4935:2:27",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4923:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4923:15:27"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4944:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4955:2:27",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4940:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4940:18:27"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4960:6:27"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "4901:21:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4901:66:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4901:66:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4976:62:27",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4992:9:27"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "5011:6:27"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5019:2:27",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5007:3:27"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5007:15:27"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5028:2:27",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "5024:3:27"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5024:7:27"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "5003:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5003:29:27"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4988:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4988:45:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5035:2:27",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4984:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4984:54:27"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4976:4:27"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4751:9:27",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4762:6:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4773:4:27",
                "type": ""
              }
            ],
            "src": "4661:383:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5223:224:27",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5240:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5251:2:27",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5233:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5233:21:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5233:21:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5274:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5285:2:27",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5270:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5270:18:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5290:2:27",
                        "type": "",
                        "value": "34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5263:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5263:30:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5263:30:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5313:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5324:2:27",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5309:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5309:18:27"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5329:34:27",
                        "type": "",
                        "value": "EnumerableSet: index out of boun"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5302:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5302:62:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5302:62:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5384:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5395:2:27",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5380:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5380:18:27"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5400:4:27",
                        "type": "",
                        "value": "ds"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5373:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5373:32:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5373:32:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5414:27:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5426:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5437:3:27",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5422:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5422:19:27"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5414:4:27"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_045d6834e6193a687012a3ad777f612279e549b6945364d9d2324f48610d3cbb__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5200:9:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5214:4:27",
                "type": ""
              }
            ],
            "src": "5049:398:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5626:182:27",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5643:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5654:2:27",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5636:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5636:21:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5636:21:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5677:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5688:2:27",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5673:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5673:18:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5693:2:27",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5666:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5666:30:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5666:30:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5716:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5727:2:27",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5712:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5712:18:27"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5732:34:27",
                        "type": "",
                        "value": "Strings: hex length insufficient"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5705:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5705:62:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5705:62:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5776:26:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5788:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5799:2:27",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5784:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5784:18:27"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5776:4:27"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5603:9:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5617:4:27",
                "type": ""
              }
            ],
            "src": "5452:356:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5987:172:27",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6004:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6015:2:27",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5997:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5997:21:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5997:21:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6038:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6049:2:27",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6034:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6034:18:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6054:2:27",
                        "type": "",
                        "value": "22"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6027:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6027:30:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6027:30:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6077:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6088:2:27",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6073:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6073:18:27"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6093:24:27",
                        "type": "",
                        "value": "You're not the bailiff"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6066:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6066:52:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6066:52:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6127:26:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6139:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6150:2:27",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6135:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6135:18:27"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6127:4:27"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0ffc20998062eb979046514c8cb434ec9c80f0cdca1359cb2d0e8d59f2eadf7e__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5964:9:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5978:4:27",
                "type": ""
              }
            ],
            "src": "5813:346:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6338:166:27",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6355:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6366:2:27",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6348:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6348:21:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6348:21:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6389:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6400:2:27",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6385:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6385:18:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6405:2:27",
                        "type": "",
                        "value": "16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6378:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6378:30:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6378:30:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6428:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6439:2:27",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6424:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6424:18:27"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6444:18:27",
                        "type": "",
                        "value": "Nothing to sync!"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6417:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6417:46:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6417:46:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6472:26:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6484:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6495:2:27",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6480:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6480:18:27"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6472:4:27"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_5f0d6f78d866cfcc033dfd498e1ea2da61ff37da3a1799a926b48d445c3e2798__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6315:9:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6329:4:27",
                "type": ""
              }
            ],
            "src": "6164:340:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6683:169:27",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6700:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6711:2:27",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6693:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6693:21:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6693:21:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6734:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6745:2:27",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6730:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6730:18:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6750:2:27",
                        "type": "",
                        "value": "19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6723:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6723:30:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6723:30:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6773:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6784:2:27",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6769:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6769:18:27"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6789:21:27",
                        "type": "",
                        "value": "You're not the Jury"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6762:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6762:49:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6762:49:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6820:26:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6832:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6843:2:27",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6828:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6828:18:27"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6820:4:27"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_bbe9541cd2bb50cc0ea027b388bfe54fc1d8beff82038257b733a24f8b66c72f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6660:9:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6674:4:27",
                "type": ""
              }
            ],
            "src": "6509:343:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7031:237:27",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7048:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7059:2:27",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7041:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7041:21:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7041:21:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7082:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7093:2:27",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7078:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7078:18:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7098:2:27",
                        "type": "",
                        "value": "47"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7071:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7071:30:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7071:30:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7121:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7132:2:27",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7117:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7117:18:27"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7137:34:27",
                        "type": "",
                        "value": "AccessControl: can only renounce"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7110:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7110:62:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7110:62:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7192:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7203:2:27",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7188:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7188:18:27"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7208:17:27",
                        "type": "",
                        "value": " roles for self"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7181:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7181:45:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7181:45:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7235:27:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7247:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7258:3:27",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7243:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7243:19:27"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7235:4:27"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7008:9:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7022:4:27",
                "type": ""
              }
            ],
            "src": "6857:411:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7374:76:27",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7384:26:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7396:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7407:2:27",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7392:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7392:18:27"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7384:4:27"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7426:9:27"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "7437:6:27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7419:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7419:25:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7419:25:27"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7343:9:27",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7354:6:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7365:4:27",
                "type": ""
              }
            ],
            "src": "7273:177:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7503:80:27",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7530:22:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "7532:16:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7532:18:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7532:18:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7519:1:27"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "7526:1:27"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "7522:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7522:6:27"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "7516:2:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7516:13:27"
                  },
                  "nodeType": "YulIf",
                  "src": "7513:2:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7561:16:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7572:1:27"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "7575:1:27"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7568:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7568:9:27"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "7561:3:27"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "7486:1:27",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "7489:1:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "7495:3:27",
                "type": ""
              }
            ],
            "src": "7455:128:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7640:116:27",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7699:22:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "7701:16:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7701:18:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7701:18:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "7671:1:27"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "7664:6:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7664:9:27"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "7657:6:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7657:17:27"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "7679:1:27"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7690:1:27",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "7686:3:27"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7686:6:27"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "7694:1:27"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "7682:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7682:14:27"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "7676:2:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7676:21:27"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "7653:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7653:45:27"
                  },
                  "nodeType": "YulIf",
                  "src": "7650:2:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7730:20:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7745:1:27"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "7748:1:27"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "7741:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7741:9:27"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "7730:7:27"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "7619:1:27",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "7622:1:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "7628:7:27",
                "type": ""
              }
            ],
            "src": "7588:168:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7810:76:27",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7832:22:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "7834:16:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7834:18:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7834:18:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7826:1:27"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "7829:1:27"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "7823:2:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7823:8:27"
                  },
                  "nodeType": "YulIf",
                  "src": "7820:2:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7863:17:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7875:1:27"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "7878:1:27"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "7871:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7871:9:27"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "7863:4:27"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "7792:1:27",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "7795:1:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "7801:4:27",
                "type": ""
              }
            ],
            "src": "7761:125:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7944:205:27",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7954:10:27",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "7963:1:27",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "7958:1:27",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8023:63:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "8048:3:27"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "8053:1:27"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "8044:3:27"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "8044:11:27"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "8067:3:27"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "8072:1:27"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "8063:3:27"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "8063:11:27"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "8057:5:27"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "8057:18:27"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "8037:6:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8037:39:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8037:39:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "7984:1:27"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "7987:6:27"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "7981:2:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7981:13:27"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "7995:19:27",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "7997:15:27",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "8006:1:27"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8009:2:27",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "8002:3:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8002:10:27"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "7997:1:27"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "7977:3:27",
                    "statements": []
                  },
                  "src": "7973:113:27"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8112:31:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "8125:3:27"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "8130:6:27"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "8121:3:27"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "8121:16:27"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8139:1:27",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "8114:6:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8114:27:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8114:27:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "8101:1:27"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "8104:6:27"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "8098:2:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8098:13:27"
                  },
                  "nodeType": "YulIf",
                  "src": "8095:2:27"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "7922:3:27",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "7927:3:27",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "7932:6:27",
                "type": ""
              }
            ],
            "src": "7891:258:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8201:89:27",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8228:22:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "8230:16:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8230:18:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8230:18:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8221:5:27"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "8214:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8214:13:27"
                  },
                  "nodeType": "YulIf",
                  "src": "8211:2:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8259:25:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8270:5:27"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8281:1:27",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "8277:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8277:6:27"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8266:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8266:18:27"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "8259:3:27"
                    }
                  ]
                }
              ]
            },
            "name": "decrement_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8183:5:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "8193:3:27",
                "type": ""
              }
            ],
            "src": "8154:136:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8342:88:27",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8373:22:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "8375:16:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8375:18:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8375:18:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8358:5:27"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8369:1:27",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "8365:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8365:6:27"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "8355:2:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8355:17:27"
                  },
                  "nodeType": "YulIf",
                  "src": "8352:2:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8404:20:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8415:5:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8422:1:27",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8411:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8411:13:27"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "8404:3:27"
                    }
                  ]
                }
              ]
            },
            "name": "increment_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8324:5:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "8334:3:27",
                "type": ""
              }
            ],
            "src": "8295:135:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8467:95:27",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8484:1:27",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8491:3:27",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8496:10:27",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "8487:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8487:20:27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8477:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8477:31:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8477:31:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8524:1:27",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8527:4:27",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8517:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8517:15:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8517:15:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8548:1:27",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8551:4:27",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "8541:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8541:15:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8541:15:27"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "8435:127:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8614:86:27",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8678:16:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8687:1:27",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8690:1:27",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "8680:6:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8680:12:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8680:12:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "8637:5:27"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "8648:5:27"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8663:3:27",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8668:1:27",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "8659:3:27"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8659:11:27"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8672:1:27",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "8655:3:27"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8655:19:27"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "8644:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8644:31:27"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "8634:2:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8634:42:27"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "8627:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8627:50:27"
                  },
                  "nodeType": "YulIf",
                  "src": "8624:2:27"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8603:5:27",
                "type": ""
              }
            ],
            "src": "8567:133:27"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_t_address(value)\n        value1 := value\n    }\n    function abi_decode_tuple_t_bytes32t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, \"AccessControl: account \")\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), add(pos, 23), length)\n        let _1 := add(pos, length)\n        mstore(add(_1, 23), \" is missing role \")\n        let length_1 := mload(value1)\n        copy_memory_to_memory(add(value1, 0x20), add(_1, 40), length_1)\n        end := add(add(_1, length_1), 40)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_bytes32_t_address__to_t_bytes32_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bytes32_t_uint256__to_t_bytes32_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_contract$_AddressManager_$1183__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_ERC20_$3490__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_JuryPool_$628__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_045d6834e6193a687012a3ad777f612279e549b6945364d9d2324f48610d3cbb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"EnumerableSet: index out of boun\")\n        mstore(add(headStart, 96), \"ds\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Strings: hex length insufficient\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_0ffc20998062eb979046514c8cb434ec9c80f0cdca1359cb2d0e8d59f2eadf7e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"You're not the bailiff\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_5f0d6f78d866cfcc033dfd498e1ea2da61ff37da3a1799a926b48d445c3e2798__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Nothing to sync!\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_bbe9541cd2bb50cc0ea027b388bfe54fc1d8beff82038257b733a24f8b66c72f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"You're not the Jury\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 47)\n        mstore(add(headStart, 64), \"AccessControl: can only renounce\")\n        mstore(add(headStart, 96), \" roles for self\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function decrement_t_uint256(value) -> ret\n    {\n        if iszero(value) { panic_error_0x11() }\n        ret := add(value, not(0))\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function validator_revert_t_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n}",
      "id": 27,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "391:1096:0:-:0;;;637:33:5;;;-1:-1:-1;;;;810:28:5;;;665:5;504:27:0;;580:2;537:45;;621:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;656:21:3;:46;;-1:-1:-1;;;;;656:46:3;;;-1:-1:-1;;;;;;656:46:3;;;;;;;;712:14;:54;;;;;744:21;;712:54;;;;;;687:22:0;955:20:5::1;:18;:20::i;:::-;989:12;:10;:12::i;:::-;1047:15;::::0;1016:47:::1;::::0;2439:4:6::1;::::0;-1:-1:-1;;;;;1047:15:5::1;1016:10;:47::i;:::-;1104:15;::::0;1077:43:::1;::::0;295:27:::1;::::0;-1:-1:-1;;;;;1104:15:5::1;1077:10;:43::i;:::-;1161:13;::::0;1134:41:::1;::::0;373:27:::1;::::0;-1:-1:-1;;;;;1161:13:5::1;1134:10;:41::i;:::-;1214:12;::::0;1189:38:::1;::::0;449:25:::1;::::0;-1:-1:-1;;;;;1214:12:5::1;1189:10;:38::i;:::-;1271:11;::::0;1241:42:::1;::::0;528:30:::1;::::0;-1:-1:-1;;;;;1271:11:5::1;1241:10;:42::i;:::-;1297:33;604:22;1327:1;1297:10;:33::i;:::-;849:492:::0;621:99:0;391:1096;;1874:108:3;1921:21;:19;:21::i;:::-;1952:23;:21;:23::i;:::-;1874:108::o;4191:150:5:-;4248:14;;;;;;;;;-1:-1:-1;;;;;4248:14:5;-1:-1:-1;;;;;4248:24:5;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4236:9;:38;;;;;-1:-1:-1;;;4236:38:5;-1:-1:-1;;;;4236:38:5;;;;;;;;;;;4299:25;;;-1:-1:-1;;;4299:25:5;;;;-1:-1:-1;;;;;4299:14:5;;;;:23;;:25;;;;;;;;;;;;;;;:14;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4288:8;:36;;;;;-1:-1:-1;;;4288:36:5;-1:-1:-1;;;;4288:36:5;;;;;;;;;4191:150::o;2922:166:7:-;3009:31;3026:4;3032:7;3009:16;;;;;:31;;:::i;:::-;3050:18;;;;:12;:18;;;;;;;;:31;;3073:7;;3050:22;;;;;:31;;:::i;:::-;;2922:166;;:::o;786:324:3:-;907:14;;;;;;;;;-1:-1:-1;;;;;907:14:3;-1:-1:-1;;;;;907:28:3;;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;891:13;:46;;-1:-1:-1;;;;;;891:46:3;-1:-1:-1;;;;;891:46:3;;;;;;962:14;;:29;;;-1:-1:-1;;;962:29:3;;;;:14;;;;;:27;;:29;;;;;;;;;;;;;;:14;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;947:12;:44;;-1:-1:-1;;;;;;947:44:3;-1:-1:-1;;;;;947:44:3;;;;;;1019:14;;:32;;;-1:-1:-1;;;1019:32:3;;;;:14;;;;;:30;;:32;;;;;;;;;;;;;;:14;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1001:15;:50;;-1:-1:-1;;;;;;1001:50:3;-1:-1:-1;;;;;1001:50:3;;;;;;1075:14;;:28;;;-1:-1:-1;;;1075:28:3;;;;:14;;;;;:26;;:28;;;;;;;;;;;;;;:14;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1061:11;:42;;-1:-1:-1;;;;;;1061:42:3;-1:-1:-1;;;;;1061:42:3;;;;;;;;;;786:324::o;1232:252:0:-;1357:29;:27;;;;;:29;;:::i;:::-;1412:18;;1396:7;:35;;-1:-1:-1;;;;;1412:18:0;;;-1:-1:-1;;;;;;1396:35:0;;;;;;;1461:15;;1441:8;:36;;1461:15;;;;1441:36;;;;;1232:252::o;7515:110:6:-;7593:25;7604:4;7610:7;7593:10;:25::i;:::-;7515:110;;:::o;6430:150:26:-;6500:4;6523:50;6528:3;-1:-1:-1;;;;;6548:23:26;;6523:4;:50::i;:::-;6516:57;;6430:150;;;;;:::o;1116:503:3:-;1251:14;;;;;;;;;-1:-1:-1;;;;;1251:14:3;-1:-1:-1;;;;;1251:32:3;;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1231:17;:54;;-1:-1:-1;;;;;;1231:54:3;-1:-1:-1;;;;;1231:54:3;;;;;;1316:14;;:35;;;-1:-1:-1;;;1316:35:3;;;;:14;;;;;:33;;:35;;;;;;;;;;;;;;:14;:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1295:18;:56;;-1:-1:-1;;;;;;1295:56:3;-1:-1:-1;;;;;1295:56:3;;;;;;1388:14;;:32;;;-1:-1:-1;;;1388:32:3;;;;:14;;;;;:30;;:32;;;;;;;;;;;;;;:14;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1370:15;:50;;-1:-1:-1;;;;;;1370:50:3;-1:-1:-1;;;;;1370:50:3;;;;;;1448:14;;:32;;;-1:-1:-1;;;1448:32:3;;;;:14;;;;;:30;;:32;;;;;;;;;;;;;;:14;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1430:15;:50;;-1:-1:-1;;;;;;1430:50:3;-1:-1:-1;;;;;1430:50:3;;;;;;1509:14;;:33;;;-1:-1:-1;;;1509:33:3;;;;:14;;;;;:31;;:33;;;;;;;;;;;;;;:14;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1490:16;:52;;-1:-1:-1;;;;;;1490:52:3;-1:-1:-1;;;;;1490:52:3;;;;;;1571:14;;:32;;;-1:-1:-1;;;1571:32:3;;;;:14;;;;;:30;;:32;;;;;;;;;;;;;;:14;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1553:15;:50;;-1:-1:-1;;;;;;1553:50:3;-1:-1:-1;;;;;1553:50:3;;;;;;;;;;1116:503::o;7948:224:6:-;8022:22;8030:4;8036:7;8022;:22::i;:::-;8017:149;;8060:6;:12;;;;;;;;;;;-1:-1:-1;;;;;8060:29:6;;;;;;;;;:36;;-1:-1:-1;;8060:36:6;8092:4;8060:36;;;8142:12;:10;:12::i;:::-;-1:-1:-1;;;;;8115:40:6;8133:7;-1:-1:-1;;;;;8115:40:6;8127:4;8115:40;;;;;;;;;;7948:224;;:::o;1632:404:26:-;1695:4;1716:21;1726:3;1731:5;1716:9;:21::i;:::-;1711:319;;-1:-1:-1;1753:23:26;;;;;;;;:11;:23;;;;;;;;;;;;;1933:18;;1911:19;;;:12;;;:19;;;;;;:40;;;;1965:11;;1711:319;-1:-1:-1;2014:5:26;2007:12;;4374:137:6;4452:4;4475:12;;;;;;;;;;;-1:-1:-1;;;;;4475:29:6;;;;;;;;;;;;;;;4374:137::o;586:96:20:-;665:10;586:96;:::o;3806:127:26:-;3879:4;3902:19;;;:12;;;;;:19;;;;;;:24;;;3806:127::o;14:310:27:-;;137:2;125:9;116:7;112:23;108:32;105:2;;;158:6;150;143:22;105:2;189:16;;-1:-1:-1;;;;;234:31:27;;224:42;;214:2;;285:6;277;270:22;214:2;313:5;95:229;-1:-1:-1;;;95:229:27:o;329:297::-;;449:2;437:9;428:7;424:23;420:32;417:2;;;470:6;462;455:22;417:2;507:9;501:16;560:5;553:13;546:21;539:5;536:32;526:2;;587:6;579;572:22;407:219;391:1096:0;;;;;;",
  "deployedSourceMap": "391:1096:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;817:224:7;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;410:27:3;;;:::i;:::-;;;;;;;:::i;7691:149:5:-;;;;;;:::i;:::-;;:::i;:::-;;7606:75;;;:::i;146:32:3:-;;;:::i;410:64:5:-;;;:::i;:::-;;;;;;;:::i;5348:121:6:-;;;;;;:::i;:::-;;:::i;2156:162:7:-;;;;;;:::i;:::-;;:::i;771:28:5:-;;;:::i;1874:108:3:-;;;:::i;4432:113:5:-;;;:::i;2663:171:7:-;;;;;;:::i;:::-;;:::i;553:36:3:-;;;:::i;296:31::-;;;:::i;2158:75::-;;;:::i;2073:79::-;;;:::i;537:45:0:-;;;:::i;7850:108:5:-;;;;;;:::i;:::-;;:::i;443:30:3:-;;;:::i;4351:71:5:-;;;:::i;479:30:3:-;;;:::i;1076:150:0:-;;;;;;:::i;:::-;;:::i;447:20::-;;;:::i;334:31:3:-;;;:::i;184:33::-;;;:::i;1626:143:7:-;;;;;;:::i;:::-;;:::i;4374:137:6:-;;;;;;:::i;:::-;;:::i;2394:49::-;;;:::i;254:68:5:-;;;:::i;637:33::-;;;:::i;473:24:0:-;;;:::i;224:30:3:-;;;:::i;1937:132:7:-;;;;;;:::i;:::-;;:::i;568:58:5:-;;;:::i;484:74::-;;;:::i;2406:167:7:-;;;;;;:::i;:::-;;:::i;376:28:3:-;;;:::i;516:26::-;;;:::i;103:36::-;;;:::i;332:68:5:-;;;:::i;1988:79:3:-;;;:::i;7968:339:5:-;;;:::i;260:30:3:-;;;:::i;732:29:5:-;;;:::i;817:224:7:-;902:4;-1:-1:-1;;;;;;925:57:7;;-1:-1:-1;;;925:57:7;;:109;;;998:36;1022:11;998:23;:36::i;:::-;918:116;817:224;-1:-1:-1;;817:224:7:o;410:27:3:-;;;-1:-1:-1;;;;;410:27:3;;:::o;7691:149:5:-;7762:26;7773:14;7762:10;:26::i;:::-;;7802:27;7814:14;7802:11;:27::i;:::-;;7691:149;:::o;7606:75::-;7653:17;:15;:17::i;:::-;;7606:75::o;146:32:3:-;;;-1:-1:-1;;;;;146:32:3;;:::o;410:64:5:-;-1:-1:-1;;;;;;;;;;;410:64:5;:::o;5348:121:6:-;5414:7;5440:12;;;;;;;;;;:22;;;;5348:121::o;2156:162:7:-;2240:30;2256:4;2262:7;2240:15;:30::i;:::-;2280:18;;;;:12;:18;;;;;:31;;2303:7;2280:22;:31::i;:::-;;2156:162;;:::o;771:28:5:-;;;-1:-1:-1;;;771:28:5;;;;;:::o;1874:108:3:-;1921:21;:19;:21::i;:::-;1952:23;:21;:23::i;:::-;1874:108::o;4432:113:5:-;2004:35;-1:-1:-1;;;;;;;;;;;2028:10:5;2004:7;:35::i;:::-;:94;;;;2063:35;-1:-1:-1;;;;;;;;;;;2087:10:5;2063:7;:35::i;:::-;2004:151;;;;2122:33;-1:-1:-1;;;;;;;;;;;2144:10:5;2122:7;:33::i;:::-;1996:206;;;;-1:-1:-1;;;1996:206:5;;;;;;;:::i;:::-;;;;;;;;;4483:14:::1;;;;;;;;;-1:-1:-1::0;;;;;4483:14:5::1;-1:-1:-1::0;;;;;4483:24:5::1;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;4523:11;:9;:11::i;2663:171:7:-:0;2750:33;2769:4;2775:7;2750:18;:33::i;:::-;2793:18;;;;:12;:18;;;;;:34;;2819:7;2793:25;:34::i;553:36:3:-;;;-1:-1:-1;;;;;553:36:3;;:::o;296:31::-;;;-1:-1:-1;;;;;296:31:3;;:::o;2158:75::-;2205:21;:19;:21::i;537:45:0:-;;;;:::o;7850:108:5:-;7917:29;7933:12;7917:15;:29::i;443:30:3:-;;;-1:-1:-1;;;;;443:30:3;;:::o;4351:71:5:-;4393:12;:10;:12::i;479:30:3:-;;;-1:-1:-1;;;;;479:30:3;;:::o;1076:150:0:-;2996:33:5;-1:-1:-1;;;;;;;;;;;3018:10:5;2996:7;:33::i;:::-;:92;;;;3053:35;-1:-1:-1;;;;;;;;;;;3077:10:5;3053:7;:35::i;:::-;2988:124;;;;-1:-1:-1;;;2988:124:5;;;;;;;:::i;:::-;1159:28:0::1;:60:::0;1076:150::o;447:20::-;;;-1:-1:-1;;;;;447:20:0;;:::o;334:31:3:-;;;-1:-1:-1;;;;;334:31:3;;:::o;184:33::-;;;-1:-1:-1;;;;;184:33:3;;:::o;1626:143:7:-;1708:7;1734:18;;;:12;:18;;;;;:28;;1756:5;1734:21;:28::i;:::-;1727:35;1626:143;-1:-1:-1;;;1626:143:7:o;4374:137:6:-;4452:4;4475:12;;;;;;;;;;;-1:-1:-1;;;;;4475:29:6;;;;;;;;;;;;;;;4374:137::o;2394:49::-;2439:4;2394:49;:::o;254:68:5:-;-1:-1:-1;;;;;;;;;;;254:68:5;:::o;637:33::-;;;-1:-1:-1;;;637:33:5;;;;;:::o;473:24:0:-;;;-1:-1:-1;;;;;473:24:0;;:::o;224:30:3:-;;;-1:-1:-1;;;;;224:30:3;;:::o;1937:132:7:-;2009:7;2035:18;;;:12;:18;;;;;:27;;:25;:27::i;568:58:5:-;-1:-1:-1;;;;;;;;;;;568:58:5;:::o;484:74::-;-1:-1:-1;;;;;;;;;;;484:74:5;:::o;2406:167:7:-;2491:31;2508:4;2514:7;2491:16;:31::i;376:28:3:-;;;-1:-1:-1;;;;;376:28:3;;:::o;516:26::-;;;-1:-1:-1;;;;;516:26:3;;:::o;103:36::-;;;-1:-1:-1;;;;;103:36:3;;:::o;332:68:5:-;-1:-1:-1;;;;;;;;;;;332:68:5;:::o;1988:79:3:-;2037:23;:21;:23::i;7968:339:5:-;8013:31;-1:-1:-1;;;;;;;;;;;8013:15:5;:31::i;:::-;;8058;-1:-1:-1;;;;;;;;;;;8058:15:5;:31::i;:::-;;8103:29;-1:-1:-1;;;;;;;;;;;8103:15:5;:29::i;:::-;;8146:34;-1:-1:-1;;;;;;;;;;;8146:15:5;:34::i;:::-;;8194:26;-1:-1:-1;;;;;;;;;;;8194:15:5;:26::i;:::-;-1:-1:-1;8234:35:5;2439:4:6;8234:15:5;:35::i;:::-;;8283:12;:10;:12::i;260:30:3:-;;;-1:-1:-1;;;;;260:30:3;;:::o;732:29:5:-;;;-1:-1:-1;;;732:29:5;;;;;:::o;7515:110:6:-;7593:25;7604:4;7610:7;7593:10;:25::i;6430:150:26:-;6500:4;6523:50;6528:3;-1:-1:-1;;;;;6548:23:26;;6523:4;:50::i;1116:503:3:-;1251:14;;;;;;;;;-1:-1:-1;;;;;1251:14:3;-1:-1:-1;;;;;1251:32:3;;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1231:17;:54;;-1:-1:-1;;;;;;1231:54:3;-1:-1:-1;;;;;1231:54:3;;;;;;1316:14;;:35;;;-1:-1:-1;;;1316:35:3;;;;:14;;;;;:33;;:35;;;;;;;;;;;;;;:14;:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1295:18;:56;;-1:-1:-1;;;;;;1295:56:3;-1:-1:-1;;;;;1295:56:3;;;;;;1388:14;;:32;;;-1:-1:-1;;;1388:32:3;;;;:14;;;;;:30;;:32;;;;;;;;;;;;;;:14;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1370:15;:50;;-1:-1:-1;;;;;;1370:50:3;-1:-1:-1;;;;;1370:50:3;;;;;;1448:14;;:32;;;-1:-1:-1;;;1448:32:3;;;;:14;;;;;:30;;:32;;;;;;;;;;;;;;:14;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1430:15;:50;;-1:-1:-1;;;;;;1430:50:3;-1:-1:-1;;;;;1430:50:3;;;;;;1509:14;;:33;;;-1:-1:-1;;;1509:33:3;;;;:14;;;;;:31;;:33;;;;;;;;;;;;;;:14;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1490:16;:52;;-1:-1:-1;;;;;;1490:52:3;-1:-1:-1;;;;;1490:52:3;;;;;;1571:14;;:32;;;-1:-1:-1;;;1571:32:3;;;;:14;;;;;:30;;:32;;;;;;;;;;;;;;:14;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1553:15;:50;;-1:-1:-1;;;;;;1553:50:3;-1:-1:-1;;;;;1553:50:3;;;;;;;;;;1116:503::o;4073:214:6:-;4158:4;-1:-1:-1;;;;;;4181:47:6;;-1:-1:-1;;;4181:47:6;;:99;;;4244:36;4268:11;4244:23;:36::i;5657:457:5:-;5791:38;;-1:-1:-1;;;5791:38:5;;5717:4;;;;5791;;:23;;:38;;5815:13;;5791:38;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5764:65;;5843:10;5871:208;5895:19;5887:5;:27;5871:208;;;5964:40;;-1:-1:-1;;;5964:40:5;;5943:18;;5964:4;;:18;;:40;;5983:13;;5998:5;;5964:40;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6022:42;;-1:-1:-1;;;6022:42:5;;5943:61;;-1:-1:-1;6022:4:5;;:15;;:42;;6038:13;;5943:61;;6022:42;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5871:208;5916:7;;;;;:::i;:::-;;;;5871:208;;;-1:-1:-1;6099:4:5;;5657:457;-1:-1:-1;;;5657:457:5:o;5169:478::-;5305:14;;:48;;-1:-1:-1;;;5305:48:5;;5230:4;;;;-1:-1:-1;;;;;5305:14:5;;;;:33;;:48;;5339:13;;5305:48;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5278:75;;5367:10;5395:217;5419:19;5411:5;:27;5395:217;;;5488:14;;:50;;-1:-1:-1;;;5488:50:5;;5467:18;;-1:-1:-1;;;;;5488:14:5;;:28;;:50;;5517:13;;5532:5;;5488:50;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5556:41;;-1:-1:-1;;;5556:41:5;;5467:71;;-1:-1:-1;5556:4:5;;:14;;:41;;5571:13;;5467:71;;5556:41;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5395:217;5440:7;;;;;:::i;:::-;;;;5395:217;;6125:694;6169:4;6223:26;-1:-1:-1;;;;;;;;;;;6223:10:5;:26::i;:::-;;6271:27;-1:-1:-1;;;;;;;;;;;6271:11:5;:27::i;:::-;6263:36;;;;;;6314:26;-1:-1:-1;;;;;;;;;;;6314:10:5;:26::i;:::-;;6362:27;-1:-1:-1;;;;;;;;;;;6362:11:5;:27::i;:::-;6354:36;;;;;;6405:24;-1:-1:-1;;;;;;;;;;;6405:10:5;:24::i;:::-;;6451:25;-1:-1:-1;;;;;;;;;;;6451:11:5;:25::i;:::-;6443:34;;;;;;6492:29;-1:-1:-1;;;;;;;;;;;6492:10:5;:29::i;:::-;;6543:30;-1:-1:-1;;;;;;;;;;;6543:11:5;:30::i;:::-;6535:39;;;;;;6589:21;-1:-1:-1;;;;;;;;;;;6589:10:5;:21::i;:::-;;6632:22;-1:-1:-1;;;;;;;;;;;6632:11:5;:22::i;:::-;6624:31;;;;;;6670:30;2439:4:6;6670:10:5;:30::i;:::-;-1:-1:-1;6722:31:5;2439:4:6;6722:11:5;:31::i;:::-;6714:40;;;;;;6769:12;:10;:12::i;:::-;-1:-1:-1;6804:4:5;6125:694;:::o;5719:145:6:-;5802:18;5815:4;5802:12;:18::i;:::-;3958:30;3969:4;3975:12;:10;:12::i;:::-;3958:10;:30::i;:::-;5832:25:::1;5843:4;5849:7;5832:10;:25::i;786:324:3:-:0;907:14;;;;;;;;;-1:-1:-1;;;;;907:14:3;-1:-1:-1;;;;;907:28:3;;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;891:13;:46;;-1:-1:-1;;;;;;891:46:3;-1:-1:-1;;;;;891:46:3;;;;;;962:14;;:29;;;-1:-1:-1;;;962:29:3;;;;:14;;;;;:27;;:29;;;;;;;;;;;;;;:14;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;947:12;:44;;-1:-1:-1;;;;;;947:44:3;-1:-1:-1;;;;;947:44:3;;;;;;1019:14;;:32;;;-1:-1:-1;;;1019:32:3;;;;:14;;;;;:30;;:32;;;;;;;;;;;;;;:14;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1001:15;:50;;-1:-1:-1;;;;;;1001:50:3;-1:-1:-1;;;;;1001:50:3;;;;;;1075:14;;:28;;;-1:-1:-1;;;1075:28:3;;;;:14;;;;;:26;;:28;;;;;;;;;;;;;;:14;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1061:11;:42;;-1:-1:-1;;;;;;1061:42:3;-1:-1:-1;;;;;1061:42:3;;;;;;;;;;786:324::o;1232:252:0:-;1357:29;:27;:29::i;:::-;1412:18;;1396:7;:35;;-1:-1:-1;;;;;1412:18:0;;;-1:-1:-1;;;;;;1396:35:0;;;;;;;1461:15;;1441:8;:36;;1461:15;;;;1441:36;;;;;1232:252::o;6736:214:6:-;6842:12;:10;:12::i;:::-;-1:-1:-1;;;;;6831:23:6;:7;-1:-1:-1;;;;;6831:23:6;;6823:83;;;;-1:-1:-1;;;6823:83:6;;;;;;;:::i;:::-;6917:26;6929:4;6935:7;6917:11;:26::i;6748:156:26:-;6821:4;6844:53;6852:3;-1:-1:-1;;;;;6872:23:26;;6844:7;:53::i;6829:758:5:-;6969:14;;:47;;-1:-1:-1;;;6969:47:5;;6893:4;;;;-1:-1:-1;;;;;6969:14:5;;;;:33;;:47;;7003:12;;6969:47;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7064:37;;-1:-1:-1;;;7064:37:5;;6939:77;;-1:-1:-1;7030:31:5;;7064:4;;:23;;:37;;7088:12;;7064:37;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7030:71;-1:-1:-1;7115:27:5;7145:51;7030:71;7145:22;:51;:::i;:::-;7115:81;;7256:1;7231:22;:26;7223:55;;;;-1:-1:-1;;;7223:55:5;;;;;;;:::i;:::-;7305:10;7333:218;7357:22;7349:5;:30;7333:218;;;7429:14;;:49;;-1:-1:-1;;;7429:49:5;;7408:18;;-1:-1:-1;;;;;7429:14:5;;:28;;:49;;7458:12;;7472:5;;7429:49;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7496:40;;-1:-1:-1;;;7496:40:5;;7408:70;;-1:-1:-1;7496:4:5;;:14;;:40;;7511:12;;7408:70;;7496:40;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7333:218;7381:7;;;;;:::i;:::-;;;;7333:218;;;-1:-1:-1;7571:4:5;;6829:758;-1:-1:-1;;;;;6829:758:5:o;4191:150::-;4248:14;;;;;;;;;-1:-1:-1;;;;;4248:14:5;-1:-1:-1;;;;;4248:24:5;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4236:9;:38;;;;;-1:-1:-1;;;4236:38:5;-1:-1:-1;;;;4236:38:5;;;;;;;;;;;4299:25;;;-1:-1:-1;;;4299:25:5;;;;-1:-1:-1;;;;;4299:14:5;;;;:23;;:25;;;;;;;;;;;;;;;:14;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4288:8;:36;;;;;-1:-1:-1;;;4288:36:5;-1:-1:-1;;;;4288:36:5;;;;;;;;;4191:150::o;7678:156:26:-;7752:7;7802:22;7806:3;7818:5;7802:3;:22::i;7231:115::-;7294:7;7320:19;7328:3;7320:7;:19::i;6098:147:6:-;6182:18;6195:4;6182:12;:18::i;:::-;3958:30;3969:4;3975:12;:10;:12::i;3958:30::-;6212:26:::1;6224:4;6230:7;6212:11;:26::i;1625:233:3:-:0;1740:14;;;;;;;;;-1:-1:-1;;;;;1740:14:3;-1:-1:-1;;;;;1740:35:3;;:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1732:46;;;;;;1812:14;;;;;;;;;-1:-1:-1;;;;;1812:14:3;-1:-1:-1;;;;;1812:32:3;;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1788:21;:58;;-1:-1:-1;;;;;;1788:58:3;-1:-1:-1;;;;;1788:58:3;;;;;;;;;;1625:233::o;7948:224:6:-;8022:22;8030:4;8036:7;8022;:22::i;:::-;8017:149;;8060:6;:12;;;;;;;;;;;-1:-1:-1;;;;;8060:29:6;;;;;;;;;:36;;-1:-1:-1;;8060:36:6;8092:4;8060:36;;;8142:12;:10;:12::i;:::-;-1:-1:-1;;;;;8115:40:6;8133:7;-1:-1:-1;;;;;8115:40:6;8127:4;8115:40;;;;;;;;;;7948:224;;:::o;1632:404:26:-;1695:4;1716:21;1726:3;1731:5;1716:9;:21::i;:::-;1711:319;;-1:-1:-1;1753:23:26;;;;;;;;:11;:23;;;;;;;;;;;;;1933:18;;1911:19;;;:12;;;:19;;;;;;:40;;;;1965:11;;1711:319;-1:-1:-1;2014:5:26;2007:12;;763:155:23;-1:-1:-1;;;;;;871:40:23;;-1:-1:-1;;;871:40:23;763:155;;;:::o;586:96:20:-;665:10;586:96;:::o;4792:375:6:-;4871:22;4879:4;4885:7;4871;:22::i;:::-;4867:294;;5000:41;5028:7;-1:-1:-1;;;;;5000:41:6;5038:2;5000:19;:41::i;:::-;5096:38;5124:4;5131:2;5096:19;:38::i;:::-;4923:225;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;4923:225:6;;;;;;;;;;-1:-1:-1;;;4909:241:6;;;;;;;:::i;8178:225::-;8252:22;8260:4;8266:7;8252;:22::i;:::-;8248:149;;;8322:5;8290:12;;;;;;;;;;;-1:-1:-1;;;;;8290:29:6;;;;;;;;;:37;;-1:-1:-1;;8290:37:6;;;8373:12;:10;:12::i;:::-;-1:-1:-1;;;;;8346:40:6;8364:7;-1:-1:-1;;;;;8346:40:6;8358:4;8346:40;;;;;;;;;;8178:225;;:::o;2204:1521:26:-;2270:4;2407:19;;;:12;;;:19;;;;;;2441:15;;2437:1282;;2798:21;2822:14;2835:1;2822:10;:14;:::i;:::-;2870:18;;2798:38;;-1:-1:-1;2850:17:26;;2870:22;;2891:1;;2870:22;:::i;:::-;2850:42;;3132:17;3152:3;:11;;3164:9;3152:22;;;;;;-1:-1:-1;;;3152:22:26;;;;;;;;;;;;;;;;;3132:42;;3295:9;3266:3;:11;;3278:13;3266:26;;;;;;-1:-1:-1;;;3266:26:26;;;;;;;;;;;;;;;;;;;;:38;;;;3370:23;;;:12;;;:23;;;;;;:36;;;3528:17;;3370:3;;3528:17;;;-1:-1:-1;;;3528:17:26;;;;;;;;;;;;;;;;;;;;;;;;;;3620:3;:12;;:19;3633:5;3620:19;;;;;;;;;;;3613:26;;;3661:4;3654:11;;;;;;;;2437:1282;3703:5;3696:12;;;;;4453:201;4547:18;;4520:7;;4547:26;-1:-1:-1;4539:73:26;;;;-1:-1:-1;;;4539:73:26;;;;;;;:::i;:::-;4629:3;:11;;4641:5;4629:18;;;;;;-1:-1:-1;;;4629:18:26;;;;;;;;;;;;;;;;;4622:25;;4453:201;;;;:::o;4014:107::-;4096:18;;4014:107::o;3806:127::-;3879:4;3902:19;;;:12;;;;;:19;;;;;;:24;;;3806:127::o;1531:437:22:-;1606:13;1631:19;1663:10;1667:6;1663:1;:10;:::i;:::-;:14;;1676:1;1663:14;:::i;:::-;1653:25;;;;;;-1:-1:-1;;;1653:25:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1653:25:22;;1631:47;;-1:-1:-1;;;1688:6:22;1695:1;1688:9;;;;;;-1:-1:-1;;;1688:9:22;;;;;;;;;;;;:15;-1:-1:-1;;;;;1688:15:22;;;;;;;;;-1:-1:-1;;;1713:6:22;1720:1;1713:9;;;;;;-1:-1:-1;;;1713:9:22;;;;;;;;;;;;:15;-1:-1:-1;;;;;1713:15:22;;;;;;;;-1:-1:-1;1743:9:22;1755:10;1759:6;1755:1;:10;:::i;:::-;:14;;1768:1;1755:14;:::i;:::-;1743:26;;1738:128;1775:1;1771;:5;1738:128;;;-1:-1:-1;;;1818:5:22;1826:3;1818:11;1809:21;;;;;-1:-1:-1;;;1809:21:22;;;;;;;;;;;;1797:6;1804:1;1797:9;;;;;;-1:-1:-1;;;1797:9:22;;;;;;;;;;;;:33;-1:-1:-1;;;;;1797:33:22;;;;;;;;-1:-1:-1;1854:1:22;1844:11;;;;;1778:3;;;:::i;:::-;;;1738:128;;;-1:-1:-1;1883:10:22;;1875:55;;;;-1:-1:-1;;;1875:55:22;;;;;;;:::i;14:263:27:-;;137:2;125:9;116:7;112:23;108:32;105:2;;;158:6;150;143:22;105:2;195:9;189:16;214:33;241:5;214:33;:::i;282:297::-;;402:2;390:9;381:7;377:23;373:32;370:2;;;423:6;415;408:22;370:2;460:9;454:16;513:5;506:13;499:21;492:5;489:32;479:2;;540:6;532;525:22;584:190;;696:2;684:9;675:7;671:23;667:32;664:2;;;717:6;709;702:22;664:2;-1:-1:-1;745:23:27;;654:120;-1:-1:-1;654:120:27:o;779:327::-;;;908:2;896:9;887:7;883:23;879:32;876:2;;;929:6;921;914:22;876:2;970:9;957:23;947:33;;1030:2;1019:9;1015:18;1002:32;1043:33;1070:5;1043:33;:::i;:::-;1095:5;1085:15;;;866:240;;;;;:::o;1111:258::-;;;1240:2;1228:9;1219:7;1215:23;1211:32;1208:2;;;1261:6;1253;1246:22;1208:2;-1:-1:-1;;1289:23:27;;;1359:2;1344:18;;;1331:32;;-1:-1:-1;1198:171:27:o;1374:306::-;;1485:2;1473:9;1464:7;1460:23;1456:32;1453:2;;;1506:6;1498;1491:22;1453:2;1537:23;;-1:-1:-1;;;;;;1589:32:27;;1579:43;;1569:2;;1641:6;1633;1626:22;1880:194;;2003:2;1991:9;1982:7;1978:23;1974:32;1971:2;;;2024:6;2016;2009:22;1971:2;-1:-1:-1;2052:16:27;;1961:113;-1:-1:-1;1961:113:27:o;2079:786::-;;2490:25;2485:3;2478:38;2545:6;2539:13;2561:62;2616:6;2611:2;2606:3;2602:12;2595:4;2587:6;2583:17;2561:62;:::i;:::-;-1:-1:-1;;;2682:2:27;2642:16;;;2674:11;;;2667:40;2732:13;;2754:63;2732:13;2803:2;2795:11;;2788:4;2776:17;;2754:63;:::i;:::-;2837:17;2856:2;2833:26;;2468:397;-1:-1:-1;;;;2468:397:27:o;2870:203::-;-1:-1:-1;;;;;3034:32:27;;;;3016:51;;3004:2;2989:18;;2971:102::o;3078:187::-;3243:14;;3236:22;3218:41;;3206:2;3191:18;;3173:92::o;3270:177::-;3416:25;;;3404:2;3389:18;;3371:76::o;3452:274::-;3626:25;;;-1:-1:-1;;;;;3687:32:27;3682:2;3667:18;;3660:60;3614:2;3599:18;;3581:145::o;3731:248::-;3905:25;;;3961:2;3946:18;;3939:34;3893:2;3878:18;;3860:119::o;4661:383::-;;4810:2;4799:9;4792:21;4842:6;4836:13;4885:6;4880:2;4869:9;4865:18;4858:34;4901:66;4960:6;4955:2;4944:9;4940:18;4935:2;4927:6;4923:15;4901:66;:::i;:::-;5028:2;5007:15;-1:-1:-1;;5003:29:27;4988:45;;;;5035:2;4984:54;;4782:262;-1:-1:-1;;4782:262:27:o;5049:398::-;5251:2;5233:21;;;5290:2;5270:18;;;5263:30;5329:34;5324:2;5309:18;;5302:62;-1:-1:-1;;;5395:2:27;5380:18;;5373:32;5437:3;5422:19;;5223:224::o;5452:356::-;5654:2;5636:21;;;5673:18;;;5666:30;5732:34;5727:2;5712:18;;5705:62;5799:2;5784:18;;5626:182::o;5813:346::-;6015:2;5997:21;;;6054:2;6034:18;;;6027:30;-1:-1:-1;;;6088:2:27;6073:18;;6066:52;6150:2;6135:18;;5987:172::o;6164:340::-;6366:2;6348:21;;;6405:2;6385:18;;;6378:30;-1:-1:-1;;;6439:2:27;6424:18;;6417:46;6495:2;6480:18;;6338:166::o;6509:343::-;6711:2;6693:21;;;6750:2;6730:18;;;6723:30;-1:-1:-1;;;6784:2:27;6769:18;;6762:49;6843:2;6828:18;;6683:169::o;6857:411::-;7059:2;7041:21;;;7098:2;7078:18;;;7071:30;7137:34;7132:2;7117:18;;7110:62;-1:-1:-1;;;7203:2:27;7188:18;;7181:45;7258:3;7243:19;;7031:237::o;7455:128::-;;7526:1;7522:6;7519:1;7516:13;7513:2;;;7532:18;;:::i;:::-;-1:-1:-1;7568:9:27;;7503:80::o;7588:168::-;;7694:1;7690;7686:6;7682:14;7679:1;7676:21;7671:1;7664:9;7657:17;7653:45;7650:2;;;7701:18;;:::i;:::-;-1:-1:-1;7741:9:27;;7640:116::o;7761:125::-;;7829:1;7826;7823:8;7820:2;;;7834:18;;:::i;:::-;-1:-1:-1;7871:9:27;;7810:76::o;7891:258::-;7963:1;7973:113;7987:6;7984:1;7981:13;7973:113;;;8063:11;;;8057:18;8044:11;;;8037:39;8009:2;8002:10;7973:113;;;8104:6;8101:1;8098:13;8095:2;;;8139:1;8130:6;8125:3;8121:16;8114:27;8095:2;;7944:205;;;:::o;8154:136::-;;8221:5;8211:2;;8230:18;;:::i;:::-;-1:-1:-1;;;8266:18:27;;8201:89::o;8295:135::-;;-1:-1:-1;;8355:17:27;;8352:2;;;8375:18;;:::i;:::-;-1:-1:-1;8422:1:27;8411:13;;8342:88::o;8435:127::-;8496:10;8491:3;8487:20;8484:1;8477:31;8527:4;8524:1;8517:15;8551:4;8548:1;8541:15;8567:133;-1:-1:-1;;;;;8644:31:27;;8634:42;;8624:2;;8690:1;8687;8680:12",
  "source": "// SPDX-License-Identifier: MIT\n//  I have not really implemented anything yet. This is just a placeholder.\npragma solidity 0.8.0;\n\nimport \"../src/SmartConsensusMachine.sol\";\nimport \"./JuryPool.sol\";\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol\";\n\n\ncontract DisputeMachine is SmartConsensusMachine {\n\n    ERC20 public redPens;\n    JuryPool public juryHats;\n\n    uint private slashIndex = 0;\n    uint public slashPercentageInWholeNumber = 30;\n\n    uint[] private slashList;\n\n\n    constructor(address _AddressManagerAddress) SmartConsensusMachine(_AddressManagerAddress)  {\n\n    }\n\n\n    function drawJurors() internal {\n        // emit events to summon jurrors based on their token IDs        \n    }\n\n    function _slash() internal {\n\n        for (uint i = 0; i < slashIndex; i++) {\n            juryHats.slashToken(slashList[i], slashPercentageInWholeNumber);\n            slashList[i] = 0;\n        }\n        slashIndex = 0;\n\n    }\n\n    function setSlashPercent(uint _slashPercentageInWholeNumber) public JURY {\n        slashPercentageInWholeNumber = _slashPercentageInWholeNumber;\n    }\n\n    function _updateTokenAddresses() internal override {\n        // Set these from the Address Manager Contract\n        \n        super._updateTokenAddresses();\n        redPens = ERC20(RedPenTokenAddress);\n        juryHats = JuryPool(JuryPoolAddress);\n    }\n\n}",
  "sourcePath": "/home/n/Desktop/v3_fronternd/PinkSlips_FrontEnd_ROUGH/contracts/juryAndAppeals/DisputeMachine.sol",
  "ast": {
    "absolutePath": "/home/n/Desktop/v3_fronternd/PinkSlips_FrontEnd_ROUGH/contracts/juryAndAppeals/DisputeMachine.sol",
    "exportedSymbols": {
      "AccessControl": [
        2793
      ],
      "AccessControlEnumerable": [
        2983
      ],
      "Address": [
        5557
      ],
      "AddressManager": [
        1183
      ],
      "AddressManagerReciever": [
        1345
      ],
      "Arrays": [
        5642
      ],
      "ConsensusMachine": [
        1842
      ],
      "Context": [
        5665
      ],
      "Counters": [
        5726
      ],
      "DisputeMachine": [
        106
      ],
      "ERC165": [
        5953
      ],
      "ERC20": [
        3490
      ],
      "ERC20Snapshot": [
        3888
      ],
      "ERC721": [
        4731
      ],
      "ERC721Enumerable": [
        5203
      ],
      "EnumerableSet": [
        6551
      ],
      "IAccessControl": [
        2469
      ],
      "IAccessControlEnumerable": [
        2815
      ],
      "IERC165": [
        5965
      ],
      "IERC20": [
        3568
      ],
      "IERC20Metadata": [
        3913
      ],
      "IERC721": [
        4847
      ],
      "IERC721Enumerable": [
        5234
      ],
      "IERC721Metadata": [
        5261
      ],
      "IERC721Receiver": [
        4865
      ],
      "JuryPool": [
        628
      ],
      "Math": [
        6038
      ],
      "SmartConsensusMachine": [
        2425
      ],
      "Strings": [
        5929
      ]
    },
    "id": 107,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "108:22:0"
      },
      {
        "absolutePath": "/home/n/Desktop/v3_fronternd/PinkSlips_FrontEnd_ROUGH/contracts/src/SmartConsensusMachine.sol",
        "file": "../src/SmartConsensusMachine.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 107,
        "sourceUnit": 2426,
        "src": "132:42:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/n/Desktop/v3_fronternd/PinkSlips_FrontEnd_ROUGH/contracts/juryAndAppeals/JuryPool.sol",
        "file": "./JuryPool.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 107,
        "sourceUnit": 629,
        "src": "175:24:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 4,
        "nodeType": "ImportDirective",
        "scope": 107,
        "sourceUnit": 3569,
        "src": "201:56:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 5,
        "nodeType": "ImportDirective",
        "scope": 107,
        "sourceUnit": 3491,
        "src": "258:55:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol",
        "file": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol",
        "id": 6,
        "nodeType": "ImportDirective",
        "scope": 107,
        "sourceUnit": 3889,
        "src": "314:74:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 7,
              "name": "SmartConsensusMachine",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2425,
              "src": "418:21:0"
            },
            "id": 8,
            "nodeType": "InheritanceSpecifier",
            "src": "418:21:0"
          }
        ],
        "contractDependencies": [
          1345,
          2425,
          2469,
          2793,
          2815,
          2983,
          5665,
          5953,
          5965
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 106,
        "linearizedBaseContracts": [
          106,
          2425,
          1345,
          2983,
          2793,
          5953,
          5965,
          2469,
          5665,
          2815
        ],
        "name": "DisputeMachine",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "67a14f06",
            "id": 11,
            "mutability": "mutable",
            "name": "redPens",
            "nodeType": "VariableDeclaration",
            "scope": 106,
            "src": "447:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20_$3490",
              "typeString": "contract ERC20"
            },
            "typeName": {
              "id": 10,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 9,
                "name": "ERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3490,
                "src": "447:5:0"
              },
              "referencedDeclaration": 3490,
              "src": "447:5:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$3490",
                "typeString": "contract ERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "b6f928be",
            "id": 14,
            "mutability": "mutable",
            "name": "juryHats",
            "nodeType": "VariableDeclaration",
            "scope": 106,
            "src": "473:24:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_JuryPool_$628",
              "typeString": "contract JuryPool"
            },
            "typeName": {
              "id": 13,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 12,
                "name": "JuryPool",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 628,
                "src": "473:8:0"
              },
              "referencedDeclaration": 628,
              "src": "473:8:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_JuryPool_$628",
                "typeString": "contract JuryPool"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 17,
            "mutability": "mutable",
            "name": "slashIndex",
            "nodeType": "VariableDeclaration",
            "scope": 106,
            "src": "504:27:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 15,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "504:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 16,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "530:1:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "5261ad5a",
            "id": 20,
            "mutability": "mutable",
            "name": "slashPercentageInWholeNumber",
            "nodeType": "VariableDeclaration",
            "scope": 106,
            "src": "537:45:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 18,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "537:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3330",
              "id": 19,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "580:2:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_30_by_1",
                "typeString": "int_const 30"
              },
              "value": "30"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 23,
            "mutability": "mutable",
            "name": "slashList",
            "nodeType": "VariableDeclaration",
            "scope": 106,
            "src": "589:24:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
              "typeString": "uint256[]"
            },
            "typeName": {
              "baseType": {
                "id": 21,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "589:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 22,
              "nodeType": "ArrayTypeName",
              "src": "589:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                "typeString": "uint256[]"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 31,
              "nodeType": "Block",
              "src": "712:8:0",
              "statements": []
            },
            "id": 32,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 28,
                    "name": "_AddressManagerAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 25,
                    "src": "687:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 29,
                "modifierName": {
                  "id": 27,
                  "name": "SmartConsensusMachine",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2425,
                  "src": "665:21:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "665:45:0"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 26,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25,
                  "mutability": "mutable",
                  "name": "_AddressManagerAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 32,
                  "src": "633:30:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "633:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "632:32:0"
            },
            "returnParameters": {
              "id": 30,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "712:0:0"
            },
            "scope": 106,
            "src": "621:99:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 35,
              "nodeType": "Block",
              "src": "758:81:0",
              "statements": []
            },
            "id": 36,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "drawJurors",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 33,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "746:2:0"
            },
            "returnParameters": {
              "id": 34,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "758:0:0"
            },
            "scope": 106,
            "src": "727:112:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 70,
              "nodeType": "Block",
              "src": "872:198:0",
              "statements": [
                {
                  "body": {
                    "id": 64,
                    "nodeType": "Block",
                    "src": "921:118:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 52,
                                "name": "slashList",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 23,
                                "src": "955:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                  "typeString": "uint256[] storage ref"
                                }
                              },
                              "id": 54,
                              "indexExpression": {
                                "id": 53,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 40,
                                "src": "965:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "955:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 55,
                              "name": "slashPercentageInWholeNumber",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 20,
                              "src": "969:28:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 49,
                              "name": "juryHats",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14,
                              "src": "935:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_JuryPool_$628",
                                "typeString": "contract JuryPool"
                              }
                            },
                            "id": 51,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "slashToken",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 541,
                            "src": "935:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256) external"
                            }
                          },
                          "id": 56,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "935:63:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 57,
                        "nodeType": "ExpressionStatement",
                        "src": "935:63:0"
                      },
                      {
                        "expression": {
                          "id": 62,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 58,
                              "name": "slashList",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23,
                              "src": "1012:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                "typeString": "uint256[] storage ref"
                              }
                            },
                            "id": 60,
                            "indexExpression": {
                              "id": 59,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 40,
                              "src": "1022:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1012:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 61,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1027:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "1012:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 63,
                        "nodeType": "ExpressionStatement",
                        "src": "1012:16:0"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 45,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 43,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40,
                      "src": "900:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 44,
                      "name": "slashIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17,
                      "src": "904:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "900:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 65,
                  "initializationExpression": {
                    "assignments": [
                      40
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 40,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 65,
                        "src": "888:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 39,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "888:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 42,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 41,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "897:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "888:10:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 47,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "916:3:0",
                      "subExpression": {
                        "id": 46,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40,
                        "src": "916:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 48,
                    "nodeType": "ExpressionStatement",
                    "src": "916:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "883:156:0"
                },
                {
                  "expression": {
                    "id": 68,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 66,
                      "name": "slashIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17,
                      "src": "1048:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 67,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1061:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1048:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 69,
                  "nodeType": "ExpressionStatement",
                  "src": "1048:14:0"
                }
              ]
            },
            "id": 71,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_slash",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 37,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "860:2:0"
            },
            "returnParameters": {
              "id": 38,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "872:0:0"
            },
            "scope": 106,
            "src": "845:225:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 82,
              "nodeType": "Block",
              "src": "1149:77:0",
              "statements": [
                {
                  "expression": {
                    "id": 80,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 78,
                      "name": "slashPercentageInWholeNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20,
                      "src": "1159:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 79,
                      "name": "_slashPercentageInWholeNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73,
                      "src": "1190:29:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1159:60:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 81,
                  "nodeType": "ExpressionStatement",
                  "src": "1159:60:0"
                }
              ]
            },
            "functionSelector": "645d2c41",
            "id": 83,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 76,
                "modifierName": {
                  "id": 75,
                  "name": "JURY",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2048,
                  "src": "1144:4:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1144:4:0"
              }
            ],
            "name": "setSlashPercent",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 74,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 73,
                  "mutability": "mutable",
                  "name": "_slashPercentageInWholeNumber",
                  "nodeType": "VariableDeclaration",
                  "scope": 83,
                  "src": "1101:34:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 72,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1101:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1100:36:0"
            },
            "returnParameters": {
              "id": 77,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1149:0:0"
            },
            "scope": 106,
            "src": "1076:150:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1297
            ],
            "body": {
              "id": 104,
              "nodeType": "Block",
              "src": "1283:201:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 87,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "1357:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_DisputeMachine_$106_$",
                          "typeString": "type(contract super DisputeMachine)"
                        }
                      },
                      "id": 89,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_updateTokenAddresses",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1297,
                      "src": "1357:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 90,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1357:29:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 91,
                  "nodeType": "ExpressionStatement",
                  "src": "1357:29:0"
                },
                {
                  "expression": {
                    "id": 96,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 92,
                      "name": "redPens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11,
                      "src": "1396:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$3490",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 94,
                          "name": "RedPenTokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1192,
                          "src": "1412:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 93,
                        "name": "ERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3490,
                        "src": "1406:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20_$3490_$",
                          "typeString": "type(contract ERC20)"
                        }
                      },
                      "id": 95,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1406:25:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$3490",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "1396:35:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$3490",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 97,
                  "nodeType": "ExpressionStatement",
                  "src": "1396:35:0"
                },
                {
                  "expression": {
                    "id": 102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 98,
                      "name": "juryHats",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14,
                      "src": "1441:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_JuryPool_$628",
                        "typeString": "contract JuryPool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 100,
                          "name": "JuryPoolAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1200,
                          "src": "1461:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 99,
                        "name": "JuryPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 628,
                        "src": "1452:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_JuryPool_$628_$",
                          "typeString": "type(contract JuryPool)"
                        }
                      },
                      "id": 101,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1452:25:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_JuryPool_$628",
                        "typeString": "contract JuryPool"
                      }
                    },
                    "src": "1441:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_JuryPool_$628",
                      "typeString": "contract JuryPool"
                    }
                  },
                  "id": 103,
                  "nodeType": "ExpressionStatement",
                  "src": "1441:36:0"
                }
              ]
            },
            "id": 105,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_updateTokenAddresses",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 85,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1274:8:0"
            },
            "parameters": {
              "id": 84,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1262:2:0"
            },
            "returnParameters": {
              "id": 86,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1283:0:0"
            },
            "scope": 106,
            "src": "1232:252:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 107,
        "src": "391:1096:0"
      }
    ],
    "src": "108:1379:0"
  },
  "legacyAST": {
    "absolutePath": "/home/n/Desktop/v3_fronternd/PinkSlips_FrontEnd_ROUGH/contracts/juryAndAppeals/DisputeMachine.sol",
    "exportedSymbols": {
      "AccessControl": [
        2793
      ],
      "AccessControlEnumerable": [
        2983
      ],
      "Address": [
        5557
      ],
      "AddressManager": [
        1183
      ],
      "AddressManagerReciever": [
        1345
      ],
      "Arrays": [
        5642
      ],
      "ConsensusMachine": [
        1842
      ],
      "Context": [
        5665
      ],
      "Counters": [
        5726
      ],
      "DisputeMachine": [
        106
      ],
      "ERC165": [
        5953
      ],
      "ERC20": [
        3490
      ],
      "ERC20Snapshot": [
        3888
      ],
      "ERC721": [
        4731
      ],
      "ERC721Enumerable": [
        5203
      ],
      "EnumerableSet": [
        6551
      ],
      "IAccessControl": [
        2469
      ],
      "IAccessControlEnumerable": [
        2815
      ],
      "IERC165": [
        5965
      ],
      "IERC20": [
        3568
      ],
      "IERC20Metadata": [
        3913
      ],
      "IERC721": [
        4847
      ],
      "IERC721Enumerable": [
        5234
      ],
      "IERC721Metadata": [
        5261
      ],
      "IERC721Receiver": [
        4865
      ],
      "JuryPool": [
        628
      ],
      "Math": [
        6038
      ],
      "SmartConsensusMachine": [
        2425
      ],
      "Strings": [
        5929
      ]
    },
    "id": 107,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "108:22:0"
      },
      {
        "absolutePath": "/home/n/Desktop/v3_fronternd/PinkSlips_FrontEnd_ROUGH/contracts/src/SmartConsensusMachine.sol",
        "file": "../src/SmartConsensusMachine.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 107,
        "sourceUnit": 2426,
        "src": "132:42:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/n/Desktop/v3_fronternd/PinkSlips_FrontEnd_ROUGH/contracts/juryAndAppeals/JuryPool.sol",
        "file": "./JuryPool.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 107,
        "sourceUnit": 629,
        "src": "175:24:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 4,
        "nodeType": "ImportDirective",
        "scope": 107,
        "sourceUnit": 3569,
        "src": "201:56:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 5,
        "nodeType": "ImportDirective",
        "scope": 107,
        "sourceUnit": 3491,
        "src": "258:55:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol",
        "file": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol",
        "id": 6,
        "nodeType": "ImportDirective",
        "scope": 107,
        "sourceUnit": 3889,
        "src": "314:74:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 7,
              "name": "SmartConsensusMachine",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2425,
              "src": "418:21:0"
            },
            "id": 8,
            "nodeType": "InheritanceSpecifier",
            "src": "418:21:0"
          }
        ],
        "contractDependencies": [
          1345,
          2425,
          2469,
          2793,
          2815,
          2983,
          5665,
          5953,
          5965
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 106,
        "linearizedBaseContracts": [
          106,
          2425,
          1345,
          2983,
          2793,
          5953,
          5965,
          2469,
          5665,
          2815
        ],
        "name": "DisputeMachine",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "67a14f06",
            "id": 11,
            "mutability": "mutable",
            "name": "redPens",
            "nodeType": "VariableDeclaration",
            "scope": 106,
            "src": "447:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20_$3490",
              "typeString": "contract ERC20"
            },
            "typeName": {
              "id": 10,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 9,
                "name": "ERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3490,
                "src": "447:5:0"
              },
              "referencedDeclaration": 3490,
              "src": "447:5:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$3490",
                "typeString": "contract ERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "b6f928be",
            "id": 14,
            "mutability": "mutable",
            "name": "juryHats",
            "nodeType": "VariableDeclaration",
            "scope": 106,
            "src": "473:24:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_JuryPool_$628",
              "typeString": "contract JuryPool"
            },
            "typeName": {
              "id": 13,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 12,
                "name": "JuryPool",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 628,
                "src": "473:8:0"
              },
              "referencedDeclaration": 628,
              "src": "473:8:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_JuryPool_$628",
                "typeString": "contract JuryPool"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 17,
            "mutability": "mutable",
            "name": "slashIndex",
            "nodeType": "VariableDeclaration",
            "scope": 106,
            "src": "504:27:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 15,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "504:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 16,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "530:1:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "5261ad5a",
            "id": 20,
            "mutability": "mutable",
            "name": "slashPercentageInWholeNumber",
            "nodeType": "VariableDeclaration",
            "scope": 106,
            "src": "537:45:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 18,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "537:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3330",
              "id": 19,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "580:2:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_30_by_1",
                "typeString": "int_const 30"
              },
              "value": "30"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 23,
            "mutability": "mutable",
            "name": "slashList",
            "nodeType": "VariableDeclaration",
            "scope": 106,
            "src": "589:24:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
              "typeString": "uint256[]"
            },
            "typeName": {
              "baseType": {
                "id": 21,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "589:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 22,
              "nodeType": "ArrayTypeName",
              "src": "589:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                "typeString": "uint256[]"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 31,
              "nodeType": "Block",
              "src": "712:8:0",
              "statements": []
            },
            "id": 32,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 28,
                    "name": "_AddressManagerAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 25,
                    "src": "687:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 29,
                "modifierName": {
                  "id": 27,
                  "name": "SmartConsensusMachine",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2425,
                  "src": "665:21:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "665:45:0"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 26,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25,
                  "mutability": "mutable",
                  "name": "_AddressManagerAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 32,
                  "src": "633:30:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "633:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "632:32:0"
            },
            "returnParameters": {
              "id": 30,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "712:0:0"
            },
            "scope": 106,
            "src": "621:99:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 35,
              "nodeType": "Block",
              "src": "758:81:0",
              "statements": []
            },
            "id": 36,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "drawJurors",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 33,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "746:2:0"
            },
            "returnParameters": {
              "id": 34,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "758:0:0"
            },
            "scope": 106,
            "src": "727:112:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 70,
              "nodeType": "Block",
              "src": "872:198:0",
              "statements": [
                {
                  "body": {
                    "id": 64,
                    "nodeType": "Block",
                    "src": "921:118:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 52,
                                "name": "slashList",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 23,
                                "src": "955:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                  "typeString": "uint256[] storage ref"
                                }
                              },
                              "id": 54,
                              "indexExpression": {
                                "id": 53,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 40,
                                "src": "965:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "955:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 55,
                              "name": "slashPercentageInWholeNumber",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 20,
                              "src": "969:28:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 49,
                              "name": "juryHats",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14,
                              "src": "935:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_JuryPool_$628",
                                "typeString": "contract JuryPool"
                              }
                            },
                            "id": 51,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "slashToken",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 541,
                            "src": "935:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256) external"
                            }
                          },
                          "id": 56,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "935:63:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 57,
                        "nodeType": "ExpressionStatement",
                        "src": "935:63:0"
                      },
                      {
                        "expression": {
                          "id": 62,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 58,
                              "name": "slashList",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23,
                              "src": "1012:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                "typeString": "uint256[] storage ref"
                              }
                            },
                            "id": 60,
                            "indexExpression": {
                              "id": 59,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 40,
                              "src": "1022:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1012:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 61,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1027:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "1012:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 63,
                        "nodeType": "ExpressionStatement",
                        "src": "1012:16:0"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 45,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 43,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40,
                      "src": "900:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 44,
                      "name": "slashIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17,
                      "src": "904:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "900:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 65,
                  "initializationExpression": {
                    "assignments": [
                      40
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 40,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 65,
                        "src": "888:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 39,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "888:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 42,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 41,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "897:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "888:10:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 47,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "916:3:0",
                      "subExpression": {
                        "id": 46,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40,
                        "src": "916:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 48,
                    "nodeType": "ExpressionStatement",
                    "src": "916:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "883:156:0"
                },
                {
                  "expression": {
                    "id": 68,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 66,
                      "name": "slashIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17,
                      "src": "1048:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 67,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1061:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1048:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 69,
                  "nodeType": "ExpressionStatement",
                  "src": "1048:14:0"
                }
              ]
            },
            "id": 71,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_slash",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 37,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "860:2:0"
            },
            "returnParameters": {
              "id": 38,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "872:0:0"
            },
            "scope": 106,
            "src": "845:225:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 82,
              "nodeType": "Block",
              "src": "1149:77:0",
              "statements": [
                {
                  "expression": {
                    "id": 80,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 78,
                      "name": "slashPercentageInWholeNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20,
                      "src": "1159:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 79,
                      "name": "_slashPercentageInWholeNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73,
                      "src": "1190:29:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1159:60:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 81,
                  "nodeType": "ExpressionStatement",
                  "src": "1159:60:0"
                }
              ]
            },
            "functionSelector": "645d2c41",
            "id": 83,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 76,
                "modifierName": {
                  "id": 75,
                  "name": "JURY",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2048,
                  "src": "1144:4:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1144:4:0"
              }
            ],
            "name": "setSlashPercent",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 74,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 73,
                  "mutability": "mutable",
                  "name": "_slashPercentageInWholeNumber",
                  "nodeType": "VariableDeclaration",
                  "scope": 83,
                  "src": "1101:34:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 72,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1101:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1100:36:0"
            },
            "returnParameters": {
              "id": 77,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1149:0:0"
            },
            "scope": 106,
            "src": "1076:150:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1297
            ],
            "body": {
              "id": 104,
              "nodeType": "Block",
              "src": "1283:201:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 87,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "1357:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_DisputeMachine_$106_$",
                          "typeString": "type(contract super DisputeMachine)"
                        }
                      },
                      "id": 89,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_updateTokenAddresses",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1297,
                      "src": "1357:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 90,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1357:29:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 91,
                  "nodeType": "ExpressionStatement",
                  "src": "1357:29:0"
                },
                {
                  "expression": {
                    "id": 96,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 92,
                      "name": "redPens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11,
                      "src": "1396:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$3490",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 94,
                          "name": "RedPenTokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1192,
                          "src": "1412:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 93,
                        "name": "ERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3490,
                        "src": "1406:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20_$3490_$",
                          "typeString": "type(contract ERC20)"
                        }
                      },
                      "id": 95,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1406:25:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$3490",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "1396:35:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$3490",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 97,
                  "nodeType": "ExpressionStatement",
                  "src": "1396:35:0"
                },
                {
                  "expression": {
                    "id": 102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 98,
                      "name": "juryHats",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14,
                      "src": "1441:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_JuryPool_$628",
                        "typeString": "contract JuryPool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 100,
                          "name": "JuryPoolAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1200,
                          "src": "1461:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 99,
                        "name": "JuryPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 628,
                        "src": "1452:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_JuryPool_$628_$",
                          "typeString": "type(contract JuryPool)"
                        }
                      },
                      "id": 101,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1452:25:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_JuryPool_$628",
                        "typeString": "contract JuryPool"
                      }
                    },
                    "src": "1441:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_JuryPool_$628",
                      "typeString": "contract JuryPool"
                    }
                  },
                  "id": 103,
                  "nodeType": "ExpressionStatement",
                  "src": "1441:36:0"
                }
              ]
            },
            "id": 105,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_updateTokenAddresses",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 85,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1274:8:0"
            },
            "parameters": {
              "id": 84,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1262:2:0"
            },
            "returnParameters": {
              "id": 86,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1283:0:0"
            },
            "scope": 106,
            "src": "1232:252:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 107,
        "src": "391:1096:0"
      }
    ],
    "src": "108:1379:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {
    "4": {
      "events": {},
      "links": {},
      "address": "0x236e37b542da9fb2771B2f232fd10874211971f7",
      "transactionHash": "0x53f2db9cd08894d55d82354885bdb6e97d05cd27ab389973c1b358236cc6f506"
    },
    "5777": {
      "events": {
        "0xbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32"
            }
          ],
          "name": "RoleAdminChanged",
          "type": "event"
        },
        "0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleGranted",
          "type": "event"
        },
        "0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleRevoked",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xA46852f5974b4a4204894157D98022Eb8eA3D75e",
      "transactionHash": "0xdaf3326f471c976f3c28d5507d562655c443fbe6632fd1cbea78693c07e4ba7a"
    }
  },
  "schemaVersion": "3.4.1",
  "updatedAt": "2021-07-06T04:56:30.740Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "getRoleAdmin(bytes32)": {
        "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
      },
      "getRoleMember(bytes32,uint256)": {
        "details": "Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information."
      },
      "getRoleMemberCount(bytes32)": {
        "details": "Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role."
      },
      "grantRole(bytes32,address)": {
        "details": "Overload {grantRole} to track enumerable memberships"
      },
      "hasRole(bytes32,address)": {
        "details": "Returns `true` if `account` has been granted `role`."
      },
      "renounceRole(bytes32,address)": {
        "details": "Overload {renounceRole} to track enumerable memberships"
      },
      "revokeRole(bytes32,address)": {
        "details": "Overload {revokeRole} to track enumerable memberships"
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}